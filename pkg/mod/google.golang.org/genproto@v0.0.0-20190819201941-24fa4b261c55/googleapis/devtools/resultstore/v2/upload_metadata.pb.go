// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/devtools/resultstore/v2/upload_metadata.proto

package resultstore

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The upload metadata for an invocation
type UploadMetadata struct {
	// The name of the upload metadata.  Its format will be:
	// invocations/${INVOCATION_ID}/uploadMetadata
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resume token of the last batch that was committed in the most recent
	// batch upload.
	// More information with resume_token could be found in
	// resultstore_upload.proto
	ResumeToken string `protobuf:"bytes,2,opt,name=resume_token,json=resumeToken,proto3" json:"resume_token,omitempty"`
	// Client-specific data used to resume batch upload if an error occurs and
	// retry action is needed.
	UploaderState        []byte   `protobuf:"bytes,3,opt,name=uploader_state,json=uploaderState,proto3" json:"uploader_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadMetadata) Reset()         { *m = UploadMetadata{} }
func (m *UploadMetadata) String() string { return proto.CompactTextString(m) }
func (*UploadMetadata) ProtoMessage()    {}
func (*UploadMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_26e75c19ce7f4673, []int{0}
}

func (m *UploadMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadMetadata.Unmarshal(m, b)
}
func (m *UploadMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadMetadata.Marshal(b, m, deterministic)
}
func (m *UploadMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadMetadata.Merge(m, src)
}
func (m *UploadMetadata) XXX_Size() int {
	return xxx_messageInfo_UploadMetadata.Size(m)
}
func (m *UploadMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UploadMetadata proto.InternalMessageInfo

func (m *UploadMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadMetadata) GetResumeToken() string {
	if m != nil {
		return m.ResumeToken
	}
	return ""
}

func (m *UploadMetadata) GetUploaderState() []byte {
	if m != nil {
		return m.UploaderState
	}
	return nil
}

func init() {
	proto.RegisterType((*UploadMetadata)(nil), "google.devtools.resultstore.v2.UploadMetadata")
}

func init() {
	proto.RegisterFile("google/devtools/resultstore/v2/upload_metadata.proto", fileDescriptor_26e75c19ce7f4673)
}

var fileDescriptor_26e75c19ce7f4673 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x4b, 0xc5, 0x30,
	0x10, 0xc6, 0x89, 0x8a, 0x60, 0x7c, 0xbe, 0x21, 0x53, 0x27, 0x79, 0x3e, 0x10, 0xde, 0x94, 0x40,
	0x75, 0x73, 0x73, 0x73, 0x10, 0xa4, 0xea, 0xe2, 0x52, 0x4e, 0x7b, 0x04, 0x31, 0xc9, 0xd5, 0xe4,
	0xda, 0xbf, 0x5f, 0x9a, 0xb4, 0xd0, 0xc5, 0xb7, 0x25, 0xbf, 0xef, 0x7e, 0xf0, 0xdd, 0xc9, 0x7b,
	0x4b, 0x64, 0x1d, 0x9a, 0x0e, 0x47, 0x26, 0x72, 0xc9, 0x44, 0x4c, 0x83, 0xe3, 0xc4, 0x14, 0xd1,
	0x8c, 0xb5, 0x19, 0x7a, 0x47, 0xd0, 0xb5, 0x1e, 0x19, 0x3a, 0x60, 0xd0, 0x7d, 0x24, 0x26, 0x75,
	0x5d, 0x2c, 0xbd, 0x58, 0x7a, 0x65, 0xe9, 0xb1, 0xde, 0x07, 0xb9, 0x7d, 0xcf, 0xe2, 0xf3, 0xec,
	0x29, 0x25, 0xcf, 0x02, 0x78, 0xac, 0xc4, 0x4e, 0x1c, 0x2e, 0x9a, 0xfc, 0x56, 0x37, 0x72, 0x33,
	0x79, 0x1e, 0x5b, 0xa6, 0x1f, 0x0c, 0xd5, 0x49, 0xce, 0x2e, 0x0b, 0x7b, 0x9b, 0x90, 0xba, 0x95,
	0xdb, 0xd2, 0x00, 0x63, 0x9b, 0x18, 0x18, 0xab, 0xd3, 0x9d, 0x38, 0x6c, 0x9a, 0xab, 0x85, 0xbe,
	0x4e, 0xf0, 0xf1, 0x57, 0xee, 0xbf, 0xc8, 0xeb, 0xe3, 0xad, 0x5e, 0xc4, 0xc7, 0xd3, 0x3c, 0x61,
	0xc9, 0x41, 0xb0, 0x9a, 0xa2, 0x35, 0x16, 0x43, 0xde, 0xc9, 0x94, 0x08, 0xfa, 0xef, 0xf4, 0xdf,
	0x31, 0x1e, 0x56, 0xdf, 0xcf, 0xf3, 0x6c, 0xdd, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x6d,
	0xf4, 0xe8, 0x41, 0x01, 0x00, 0x00,
}
