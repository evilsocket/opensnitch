// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/devtools/resultstore/v2/resultstore_download.proto

package resultstore

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request passed into GetInvocation
type GetInvocationRequest struct {
	// The name of the invocation to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}
	// where INVOCATION_ID must be an RFC 4122-compliant random UUID.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInvocationRequest) Reset()         { *m = GetInvocationRequest{} }
func (m *GetInvocationRequest) String() string { return proto.CompactTextString(m) }
func (*GetInvocationRequest) ProtoMessage()    {}
func (*GetInvocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{0}
}

func (m *GetInvocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInvocationRequest.Unmarshal(m, b)
}
func (m *GetInvocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInvocationRequest.Marshal(b, m, deterministic)
}
func (m *GetInvocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInvocationRequest.Merge(m, src)
}
func (m *GetInvocationRequest) XXX_Size() int {
	return xxx_messageInfo_GetInvocationRequest.Size(m)
}
func (m *GetInvocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInvocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInvocationRequest proto.InternalMessageInfo

func (m *GetInvocationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into SearchInvocations
type SearchInvocationsRequest struct {
	// The maximum number of items to return. Zero means all, but may be capped by
	// the server.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*SearchInvocationsRequest_PageToken
	//	*SearchInvocationsRequest_Offset
	PageStart isSearchInvocationsRequest_PageStart `protobuf_oneof:"page_start"`
	// A filtering query string.
	//
	// Only a limited number of fields and operators are supported. Not every
	// field supports every operator.
	//
	// Fields that support equals ("=") restrictions:
	//
	// name
	// status_attributes.status
	// workspace_info.hostname
	//
	// Fields that support contains (":") restrictions:
	//
	// invocation_attributes.users
	// invocation_attributes.labels
	//
	// Fields that support comparison ("<", "<=", ">", ">=") restrictions;
	//
	// timing.start_time
	Query string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	// The project id to search under.
	ProjectId string `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// If true, all equals or contains restrictions on string fields in query will
	// require exact match. Otherwise, a string field restriction may ignore case
	// and punctuation.
	ExactMatch           bool     `protobuf:"varint,7,opt,name=exact_match,json=exactMatch,proto3" json:"exact_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchInvocationsRequest) Reset()         { *m = SearchInvocationsRequest{} }
func (m *SearchInvocationsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchInvocationsRequest) ProtoMessage()    {}
func (*SearchInvocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{1}
}

func (m *SearchInvocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchInvocationsRequest.Unmarshal(m, b)
}
func (m *SearchInvocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchInvocationsRequest.Marshal(b, m, deterministic)
}
func (m *SearchInvocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInvocationsRequest.Merge(m, src)
}
func (m *SearchInvocationsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchInvocationsRequest.Size(m)
}
func (m *SearchInvocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInvocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInvocationsRequest proto.InternalMessageInfo

func (m *SearchInvocationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isSearchInvocationsRequest_PageStart interface {
	isSearchInvocationsRequest_PageStart()
}

type SearchInvocationsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type SearchInvocationsRequest_Offset struct {
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3,oneof"`
}

func (*SearchInvocationsRequest_PageToken) isSearchInvocationsRequest_PageStart() {}

func (*SearchInvocationsRequest_Offset) isSearchInvocationsRequest_PageStart() {}

func (m *SearchInvocationsRequest) GetPageStart() isSearchInvocationsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *SearchInvocationsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*SearchInvocationsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *SearchInvocationsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*SearchInvocationsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *SearchInvocationsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchInvocationsRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *SearchInvocationsRequest) GetExactMatch() bool {
	if m != nil {
		return m.ExactMatch
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SearchInvocationsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SearchInvocationsRequest_PageToken)(nil),
		(*SearchInvocationsRequest_Offset)(nil),
	}
}

// Response from calling SearchInvocations
type SearchInvocationsResponse struct {
	// Invocations matching the search, possibly capped at request.page_size or a
	// server limit.
	Invocations []*Invocation `protobuf:"bytes,1,rep,name=invocations,proto3" json:"invocations,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchInvocationsResponse) Reset()         { *m = SearchInvocationsResponse{} }
func (m *SearchInvocationsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchInvocationsResponse) ProtoMessage()    {}
func (*SearchInvocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{2}
}

func (m *SearchInvocationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchInvocationsResponse.Unmarshal(m, b)
}
func (m *SearchInvocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchInvocationsResponse.Marshal(b, m, deterministic)
}
func (m *SearchInvocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInvocationsResponse.Merge(m, src)
}
func (m *SearchInvocationsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchInvocationsResponse.Size(m)
}
func (m *SearchInvocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInvocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInvocationsResponse proto.InternalMessageInfo

func (m *SearchInvocationsResponse) GetInvocations() []*Invocation {
	if m != nil {
		return m.Invocations
	}
	return nil
}

func (m *SearchInvocationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed into GetInvocationDownloadMetadata
type GetInvocationDownloadMetadataRequest struct {
	// The name of the download metadata to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}/downloadMetadata
	// where INVOCATION_ID must be an RFC 4122-compliant random UUID.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInvocationDownloadMetadataRequest) Reset()         { *m = GetInvocationDownloadMetadataRequest{} }
func (m *GetInvocationDownloadMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*GetInvocationDownloadMetadataRequest) ProtoMessage()    {}
func (*GetInvocationDownloadMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{3}
}

func (m *GetInvocationDownloadMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInvocationDownloadMetadataRequest.Unmarshal(m, b)
}
func (m *GetInvocationDownloadMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInvocationDownloadMetadataRequest.Marshal(b, m, deterministic)
}
func (m *GetInvocationDownloadMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInvocationDownloadMetadataRequest.Merge(m, src)
}
func (m *GetInvocationDownloadMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_GetInvocationDownloadMetadataRequest.Size(m)
}
func (m *GetInvocationDownloadMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInvocationDownloadMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInvocationDownloadMetadataRequest proto.InternalMessageInfo

func (m *GetInvocationDownloadMetadataRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into GetConfiguration
type GetConfigurationRequest struct {
	// The name of the configuration to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}/configs/${url_encode(CONFIGURATION_ID)}
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigurationRequest) Reset()         { *m = GetConfigurationRequest{} }
func (m *GetConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigurationRequest) ProtoMessage()    {}
func (*GetConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{4}
}

func (m *GetConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigurationRequest.Unmarshal(m, b)
}
func (m *GetConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigurationRequest.Merge(m, src)
}
func (m *GetConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigurationRequest.Size(m)
}
func (m *GetConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigurationRequest proto.InternalMessageInfo

func (m *GetConfigurationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into ListConfigurations
type ListConfigurationsRequest struct {
	// The invocation name of the configurations to retrieve.
	// It must match this format: invocations/${INVOCATION_ID}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	// Zero means all, but may be capped by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*ListConfigurationsRequest_PageToken
	//	*ListConfigurationsRequest_Offset
	PageStart isListConfigurationsRequest_PageStart `protobuf_oneof:"page_start"`
	// A filter to return only resources that match it.
	// Any fields used in the filter must be also specified in the field mask.
	// May cause pages with 0 results and a next_page_token to be returned.
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConfigurationsRequest) Reset()         { *m = ListConfigurationsRequest{} }
func (m *ListConfigurationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListConfigurationsRequest) ProtoMessage()    {}
func (*ListConfigurationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{5}
}

func (m *ListConfigurationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConfigurationsRequest.Unmarshal(m, b)
}
func (m *ListConfigurationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConfigurationsRequest.Marshal(b, m, deterministic)
}
func (m *ListConfigurationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConfigurationsRequest.Merge(m, src)
}
func (m *ListConfigurationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListConfigurationsRequest.Size(m)
}
func (m *ListConfigurationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConfigurationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListConfigurationsRequest proto.InternalMessageInfo

func (m *ListConfigurationsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListConfigurationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isListConfigurationsRequest_PageStart interface {
	isListConfigurationsRequest_PageStart()
}

type ListConfigurationsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type ListConfigurationsRequest_Offset struct {
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3,oneof"`
}

func (*ListConfigurationsRequest_PageToken) isListConfigurationsRequest_PageStart() {}

func (*ListConfigurationsRequest_Offset) isListConfigurationsRequest_PageStart() {}

func (m *ListConfigurationsRequest) GetPageStart() isListConfigurationsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *ListConfigurationsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*ListConfigurationsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *ListConfigurationsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*ListConfigurationsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *ListConfigurationsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListConfigurationsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListConfigurationsRequest_PageToken)(nil),
		(*ListConfigurationsRequest_Offset)(nil),
	}
}

// Response from calling ListConfigurations
type ListConfigurationsResponse struct {
	// Configurations matching the request invocation,
	// possibly capped at request.page_size or a server limit.
	Configurations []*Configuration `protobuf:"bytes,1,rep,name=configurations,proto3" json:"configurations,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConfigurationsResponse) Reset()         { *m = ListConfigurationsResponse{} }
func (m *ListConfigurationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListConfigurationsResponse) ProtoMessage()    {}
func (*ListConfigurationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{6}
}

func (m *ListConfigurationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConfigurationsResponse.Unmarshal(m, b)
}
func (m *ListConfigurationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConfigurationsResponse.Marshal(b, m, deterministic)
}
func (m *ListConfigurationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConfigurationsResponse.Merge(m, src)
}
func (m *ListConfigurationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListConfigurationsResponse.Size(m)
}
func (m *ListConfigurationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConfigurationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListConfigurationsResponse proto.InternalMessageInfo

func (m *ListConfigurationsResponse) GetConfigurations() []*Configuration {
	if m != nil {
		return m.Configurations
	}
	return nil
}

func (m *ListConfigurationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed into GetTarget
type GetTargetRequest struct {
	// The name of the target to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTargetRequest) Reset()         { *m = GetTargetRequest{} }
func (m *GetTargetRequest) String() string { return proto.CompactTextString(m) }
func (*GetTargetRequest) ProtoMessage()    {}
func (*GetTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{7}
}

func (m *GetTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTargetRequest.Unmarshal(m, b)
}
func (m *GetTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTargetRequest.Marshal(b, m, deterministic)
}
func (m *GetTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTargetRequest.Merge(m, src)
}
func (m *GetTargetRequest) XXX_Size() int {
	return xxx_messageInfo_GetTargetRequest.Size(m)
}
func (m *GetTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTargetRequest proto.InternalMessageInfo

func (m *GetTargetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into ListTargets
type ListTargetsRequest struct {
	// The invocation name of the targets to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	// Zero means all, but may be capped by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*ListTargetsRequest_PageToken
	//	*ListTargetsRequest_Offset
	PageStart isListTargetsRequest_PageStart `protobuf_oneof:"page_start"`
	// A filter to return only resources that match it.
	// Any fields used in the filter must be also specified in the field mask.
	// May cause pages with 0 results and a next_page_token to be returned.
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTargetsRequest) Reset()         { *m = ListTargetsRequest{} }
func (m *ListTargetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTargetsRequest) ProtoMessage()    {}
func (*ListTargetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{8}
}

func (m *ListTargetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTargetsRequest.Unmarshal(m, b)
}
func (m *ListTargetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTargetsRequest.Marshal(b, m, deterministic)
}
func (m *ListTargetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTargetsRequest.Merge(m, src)
}
func (m *ListTargetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTargetsRequest.Size(m)
}
func (m *ListTargetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTargetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTargetsRequest proto.InternalMessageInfo

func (m *ListTargetsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListTargetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isListTargetsRequest_PageStart interface {
	isListTargetsRequest_PageStart()
}

type ListTargetsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type ListTargetsRequest_Offset struct {
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3,oneof"`
}

func (*ListTargetsRequest_PageToken) isListTargetsRequest_PageStart() {}

func (*ListTargetsRequest_Offset) isListTargetsRequest_PageStart() {}

func (m *ListTargetsRequest) GetPageStart() isListTargetsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *ListTargetsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*ListTargetsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *ListTargetsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*ListTargetsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *ListTargetsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListTargetsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListTargetsRequest_PageToken)(nil),
		(*ListTargetsRequest_Offset)(nil),
	}
}

// Response from calling ListTargetsResponse
type ListTargetsResponse struct {
	// Targets matching the request invocation,
	// possibly capped at request.page_size or a server limit.
	Targets []*Target `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTargetsResponse) Reset()         { *m = ListTargetsResponse{} }
func (m *ListTargetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTargetsResponse) ProtoMessage()    {}
func (*ListTargetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{9}
}

func (m *ListTargetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTargetsResponse.Unmarshal(m, b)
}
func (m *ListTargetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTargetsResponse.Marshal(b, m, deterministic)
}
func (m *ListTargetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTargetsResponse.Merge(m, src)
}
func (m *ListTargetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTargetsResponse.Size(m)
}
func (m *ListTargetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTargetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTargetsResponse proto.InternalMessageInfo

func (m *ListTargetsResponse) GetTargets() []*Target {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *ListTargetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed into GetConfiguredTarget
type GetConfiguredTargetRequest struct {
	// The name of the configured target to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${url_encode(CONFIGURATION_ID)}
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfiguredTargetRequest) Reset()         { *m = GetConfiguredTargetRequest{} }
func (m *GetConfiguredTargetRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfiguredTargetRequest) ProtoMessage()    {}
func (*GetConfiguredTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{10}
}

func (m *GetConfiguredTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfiguredTargetRequest.Unmarshal(m, b)
}
func (m *GetConfiguredTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfiguredTargetRequest.Marshal(b, m, deterministic)
}
func (m *GetConfiguredTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfiguredTargetRequest.Merge(m, src)
}
func (m *GetConfiguredTargetRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfiguredTargetRequest.Size(m)
}
func (m *GetConfiguredTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfiguredTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfiguredTargetRequest proto.InternalMessageInfo

func (m *GetConfiguredTargetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into ListConfiguredTargets
type ListConfiguredTargetsRequest struct {
	// The invocation and target name of the configured targets to retrieve.
	// It must match this format:
	// invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
	// Supports '-' for ${TARGET_ID} meaning all targets.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	// Zero means all, but may be capped by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*ListConfiguredTargetsRequest_PageToken
	//	*ListConfiguredTargetsRequest_Offset
	PageStart isListConfiguredTargetsRequest_PageStart `protobuf_oneof:"page_start"`
	// A filter to return only resources that match it.
	// Any fields used in the filter must be also specified in the field mask.
	// May cause pages with 0 results and a next_page_token to be returned.
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConfiguredTargetsRequest) Reset()         { *m = ListConfiguredTargetsRequest{} }
func (m *ListConfiguredTargetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListConfiguredTargetsRequest) ProtoMessage()    {}
func (*ListConfiguredTargetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{11}
}

func (m *ListConfiguredTargetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConfiguredTargetsRequest.Unmarshal(m, b)
}
func (m *ListConfiguredTargetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConfiguredTargetsRequest.Marshal(b, m, deterministic)
}
func (m *ListConfiguredTargetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConfiguredTargetsRequest.Merge(m, src)
}
func (m *ListConfiguredTargetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListConfiguredTargetsRequest.Size(m)
}
func (m *ListConfiguredTargetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConfiguredTargetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListConfiguredTargetsRequest proto.InternalMessageInfo

func (m *ListConfiguredTargetsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListConfiguredTargetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isListConfiguredTargetsRequest_PageStart interface {
	isListConfiguredTargetsRequest_PageStart()
}

type ListConfiguredTargetsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type ListConfiguredTargetsRequest_Offset struct {
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3,oneof"`
}

func (*ListConfiguredTargetsRequest_PageToken) isListConfiguredTargetsRequest_PageStart() {}

func (*ListConfiguredTargetsRequest_Offset) isListConfiguredTargetsRequest_PageStart() {}

func (m *ListConfiguredTargetsRequest) GetPageStart() isListConfiguredTargetsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *ListConfiguredTargetsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*ListConfiguredTargetsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *ListConfiguredTargetsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*ListConfiguredTargetsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *ListConfiguredTargetsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListConfiguredTargetsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListConfiguredTargetsRequest_PageToken)(nil),
		(*ListConfiguredTargetsRequest_Offset)(nil),
	}
}

// Response from calling ListConfiguredTargets
type ListConfiguredTargetsResponse struct {
	// ConfiguredTargets matching the request,
	// possibly capped at request.page_size or a server limit.
	ConfiguredTargets []*ConfiguredTarget `protobuf:"bytes,1,rep,name=configured_targets,json=configuredTargets,proto3" json:"configured_targets,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListConfiguredTargetsResponse) Reset()         { *m = ListConfiguredTargetsResponse{} }
func (m *ListConfiguredTargetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListConfiguredTargetsResponse) ProtoMessage()    {}
func (*ListConfiguredTargetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{12}
}

func (m *ListConfiguredTargetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListConfiguredTargetsResponse.Unmarshal(m, b)
}
func (m *ListConfiguredTargetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListConfiguredTargetsResponse.Marshal(b, m, deterministic)
}
func (m *ListConfiguredTargetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListConfiguredTargetsResponse.Merge(m, src)
}
func (m *ListConfiguredTargetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListConfiguredTargetsResponse.Size(m)
}
func (m *ListConfiguredTargetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListConfiguredTargetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListConfiguredTargetsResponse proto.InternalMessageInfo

func (m *ListConfiguredTargetsResponse) GetConfiguredTargets() []*ConfiguredTarget {
	if m != nil {
		return m.ConfiguredTargets
	}
	return nil
}

func (m *ListConfiguredTargetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed into GetAction
type GetActionRequest struct {
	// The name of the action to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${url_encode(CONFIGURATION_ID)}/actions/${url_encode(ACTION_ID)}
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActionRequest) Reset()         { *m = GetActionRequest{} }
func (m *GetActionRequest) String() string { return proto.CompactTextString(m) }
func (*GetActionRequest) ProtoMessage()    {}
func (*GetActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{13}
}

func (m *GetActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActionRequest.Unmarshal(m, b)
}
func (m *GetActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActionRequest.Marshal(b, m, deterministic)
}
func (m *GetActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActionRequest.Merge(m, src)
}
func (m *GetActionRequest) XXX_Size() int {
	return xxx_messageInfo_GetActionRequest.Size(m)
}
func (m *GetActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActionRequest proto.InternalMessageInfo

func (m *GetActionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into ListActions
type ListActionsRequest struct {
	// The invocation, target, and configuration name of the action to retrieve.
	// It must match this format:
	// invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${url_encode(CONFIGURATION_ID)}
	// Supports '-' for ${CONFIGURATION_ID} to mean all Actions for all
	// Configurations for a Target, or '-' for ${TARGET_ID} and
	// ${CONFIGURATION_ID} to mean all Actions for all Configurations and all
	// Targets. Does not support ${TARGET_ID} '-' with a specified configuration.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	// Zero means all, but may be capped by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*ListActionsRequest_PageToken
	//	*ListActionsRequest_Offset
	PageStart isListActionsRequest_PageStart `protobuf_oneof:"page_start"`
	// A filter to return only resources that match it.
	// Any fields used in the filter must be also specified in the field mask.
	// May cause pages with 0 results and a next_page_token to be returned.
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListActionsRequest) Reset()         { *m = ListActionsRequest{} }
func (m *ListActionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListActionsRequest) ProtoMessage()    {}
func (*ListActionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{14}
}

func (m *ListActionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActionsRequest.Unmarshal(m, b)
}
func (m *ListActionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActionsRequest.Marshal(b, m, deterministic)
}
func (m *ListActionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActionsRequest.Merge(m, src)
}
func (m *ListActionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListActionsRequest.Size(m)
}
func (m *ListActionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActionsRequest proto.InternalMessageInfo

func (m *ListActionsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListActionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isListActionsRequest_PageStart interface {
	isListActionsRequest_PageStart()
}

type ListActionsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type ListActionsRequest_Offset struct {
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3,oneof"`
}

func (*ListActionsRequest_PageToken) isListActionsRequest_PageStart() {}

func (*ListActionsRequest_Offset) isListActionsRequest_PageStart() {}

func (m *ListActionsRequest) GetPageStart() isListActionsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *ListActionsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*ListActionsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *ListActionsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*ListActionsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *ListActionsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListActionsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListActionsRequest_PageToken)(nil),
		(*ListActionsRequest_Offset)(nil),
	}
}

// Response from calling ListActions
type ListActionsResponse struct {
	// Actions matching the request,
	// possibly capped at request.page_size or a server limit.
	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListActionsResponse) Reset()         { *m = ListActionsResponse{} }
func (m *ListActionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListActionsResponse) ProtoMessage()    {}
func (*ListActionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{15}
}

func (m *ListActionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActionsResponse.Unmarshal(m, b)
}
func (m *ListActionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActionsResponse.Marshal(b, m, deterministic)
}
func (m *ListActionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActionsResponse.Merge(m, src)
}
func (m *ListActionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListActionsResponse.Size(m)
}
func (m *ListActionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActionsResponse proto.InternalMessageInfo

func (m *ListActionsResponse) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *ListActionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed into GetFileSet
type GetFileSetRequest struct {
	// The name of the file set to retrieve. It must match this format:
	// invocations/${INVOCATION_ID}/fileSets/${url_encode(FILE_SET_ID)}
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFileSetRequest) Reset()         { *m = GetFileSetRequest{} }
func (m *GetFileSetRequest) String() string { return proto.CompactTextString(m) }
func (*GetFileSetRequest) ProtoMessage()    {}
func (*GetFileSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{16}
}

func (m *GetFileSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileSetRequest.Unmarshal(m, b)
}
func (m *GetFileSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileSetRequest.Marshal(b, m, deterministic)
}
func (m *GetFileSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileSetRequest.Merge(m, src)
}
func (m *GetFileSetRequest) XXX_Size() int {
	return xxx_messageInfo_GetFileSetRequest.Size(m)
}
func (m *GetFileSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileSetRequest proto.InternalMessageInfo

func (m *GetFileSetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed into ListFileSets
type ListFileSetsRequest struct {
	// The invocation name of the file sets to retrieve.
	// It must match this format: invocations/${INVOCATION_ID}
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	// Zero means all, but may be capped by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*ListFileSetsRequest_PageToken
	//	*ListFileSetsRequest_Offset
	PageStart isListFileSetsRequest_PageStart `protobuf_oneof:"page_start"`
	// A filter to return only resources that match it.
	// Any fields used in the filter must be also specified in the field mask.
	// May cause pages with 0 results and a next_page_token to be returned.
	Filter               string   `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFileSetsRequest) Reset()         { *m = ListFileSetsRequest{} }
func (m *ListFileSetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListFileSetsRequest) ProtoMessage()    {}
func (*ListFileSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{17}
}

func (m *ListFileSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFileSetsRequest.Unmarshal(m, b)
}
func (m *ListFileSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFileSetsRequest.Marshal(b, m, deterministic)
}
func (m *ListFileSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFileSetsRequest.Merge(m, src)
}
func (m *ListFileSetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListFileSetsRequest.Size(m)
}
func (m *ListFileSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFileSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFileSetsRequest proto.InternalMessageInfo

func (m *ListFileSetsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListFileSetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isListFileSetsRequest_PageStart interface {
	isListFileSetsRequest_PageStart()
}

type ListFileSetsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type ListFileSetsRequest_Offset struct {
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3,oneof"`
}

func (*ListFileSetsRequest_PageToken) isListFileSetsRequest_PageStart() {}

func (*ListFileSetsRequest_Offset) isListFileSetsRequest_PageStart() {}

func (m *ListFileSetsRequest) GetPageStart() isListFileSetsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *ListFileSetsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*ListFileSetsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *ListFileSetsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*ListFileSetsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

func (m *ListFileSetsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListFileSetsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListFileSetsRequest_PageToken)(nil),
		(*ListFileSetsRequest_Offset)(nil),
	}
}

// Response from calling ListFileSets
type ListFileSetsResponse struct {
	// File sets matching the request,
	// possibly capped at request.page_size or a server limit.
	FileSets []*FileSet `protobuf:"bytes,1,rep,name=file_sets,json=fileSets,proto3" json:"file_sets,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFileSetsResponse) Reset()         { *m = ListFileSetsResponse{} }
func (m *ListFileSetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListFileSetsResponse) ProtoMessage()    {}
func (*ListFileSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{18}
}

func (m *ListFileSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFileSetsResponse.Unmarshal(m, b)
}
func (m *ListFileSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFileSetsResponse.Marshal(b, m, deterministic)
}
func (m *ListFileSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFileSetsResponse.Merge(m, src)
}
func (m *ListFileSetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListFileSetsResponse.Size(m)
}
func (m *ListFileSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFileSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFileSetsResponse proto.InternalMessageInfo

func (m *ListFileSetsResponse) GetFileSets() []*FileSet {
	if m != nil {
		return m.FileSets
	}
	return nil
}

func (m *ListFileSetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed into TraverseFileSets
type TraverseFileSetsRequest struct {
	// The name of the resource to traverse.
	// It must match one of the following formats:
	//
	// invocations/${INVOCATION_ID}/fileSets/${url_encode(FILE_SET_ID)}
	// This returns the transitive closure of FileSets referenced by the given
	// FileSet, including itself.
	//
	// invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${Curl_encode(CONFIGURATION_ID)}/actions/${url_encode(ACTION_ID)}
	// This returns the transitive closure of FileSets referenced by the given
	// Action. If ${ACTION_ID} is "-", this returns the transitive closure of
	// FileSets referenced by all Actions under the given ConfiguredTarget.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of items to return.
	// Zero means all, but may be capped by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Options for pagination.
	//
	// Types that are valid to be assigned to PageStart:
	//	*TraverseFileSetsRequest_PageToken
	//	*TraverseFileSetsRequest_Offset
	PageStart            isTraverseFileSetsRequest_PageStart `protobuf_oneof:"page_start"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *TraverseFileSetsRequest) Reset()         { *m = TraverseFileSetsRequest{} }
func (m *TraverseFileSetsRequest) String() string { return proto.CompactTextString(m) }
func (*TraverseFileSetsRequest) ProtoMessage()    {}
func (*TraverseFileSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{19}
}

func (m *TraverseFileSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseFileSetsRequest.Unmarshal(m, b)
}
func (m *TraverseFileSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseFileSetsRequest.Marshal(b, m, deterministic)
}
func (m *TraverseFileSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseFileSetsRequest.Merge(m, src)
}
func (m *TraverseFileSetsRequest) XXX_Size() int {
	return xxx_messageInfo_TraverseFileSetsRequest.Size(m)
}
func (m *TraverseFileSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseFileSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseFileSetsRequest proto.InternalMessageInfo

func (m *TraverseFileSetsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TraverseFileSetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type isTraverseFileSetsRequest_PageStart interface {
	isTraverseFileSetsRequest_PageStart()
}

type TraverseFileSetsRequest_PageToken struct {
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof"`
}

type TraverseFileSetsRequest_Offset struct {
	Offset int64 `protobuf:"varint,4,opt,name=offset,proto3,oneof"`
}

func (*TraverseFileSetsRequest_PageToken) isTraverseFileSetsRequest_PageStart() {}

func (*TraverseFileSetsRequest_Offset) isTraverseFileSetsRequest_PageStart() {}

func (m *TraverseFileSetsRequest) GetPageStart() isTraverseFileSetsRequest_PageStart {
	if m != nil {
		return m.PageStart
	}
	return nil
}

func (m *TraverseFileSetsRequest) GetPageToken() string {
	if x, ok := m.GetPageStart().(*TraverseFileSetsRequest_PageToken); ok {
		return x.PageToken
	}
	return ""
}

func (m *TraverseFileSetsRequest) GetOffset() int64 {
	if x, ok := m.GetPageStart().(*TraverseFileSetsRequest_Offset); ok {
		return x.Offset
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TraverseFileSetsRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TraverseFileSetsRequest_PageToken)(nil),
		(*TraverseFileSetsRequest_Offset)(nil),
	}
}

// Response from calling TraverseFileSets
type TraverseFileSetsResponse struct {
	// File sets matching the request.
	// The order in which results are returned is undefined, but stable.
	FileSets []*FileSet `protobuf:"bytes,1,rep,name=file_sets,json=fileSets,proto3" json:"file_sets,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraverseFileSetsResponse) Reset()         { *m = TraverseFileSetsResponse{} }
func (m *TraverseFileSetsResponse) String() string { return proto.CompactTextString(m) }
func (*TraverseFileSetsResponse) ProtoMessage()    {}
func (*TraverseFileSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_466641838cdba1d1, []int{20}
}

func (m *TraverseFileSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseFileSetsResponse.Unmarshal(m, b)
}
func (m *TraverseFileSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseFileSetsResponse.Marshal(b, m, deterministic)
}
func (m *TraverseFileSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseFileSetsResponse.Merge(m, src)
}
func (m *TraverseFileSetsResponse) XXX_Size() int {
	return xxx_messageInfo_TraverseFileSetsResponse.Size(m)
}
func (m *TraverseFileSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseFileSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseFileSetsResponse proto.InternalMessageInfo

func (m *TraverseFileSetsResponse) GetFileSets() []*FileSet {
	if m != nil {
		return m.FileSets
	}
	return nil
}

func (m *TraverseFileSetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*GetInvocationRequest)(nil), "google.devtools.resultstore.v2.GetInvocationRequest")
	proto.RegisterType((*SearchInvocationsRequest)(nil), "google.devtools.resultstore.v2.SearchInvocationsRequest")
	proto.RegisterType((*SearchInvocationsResponse)(nil), "google.devtools.resultstore.v2.SearchInvocationsResponse")
	proto.RegisterType((*GetInvocationDownloadMetadataRequest)(nil), "google.devtools.resultstore.v2.GetInvocationDownloadMetadataRequest")
	proto.RegisterType((*GetConfigurationRequest)(nil), "google.devtools.resultstore.v2.GetConfigurationRequest")
	proto.RegisterType((*ListConfigurationsRequest)(nil), "google.devtools.resultstore.v2.ListConfigurationsRequest")
	proto.RegisterType((*ListConfigurationsResponse)(nil), "google.devtools.resultstore.v2.ListConfigurationsResponse")
	proto.RegisterType((*GetTargetRequest)(nil), "google.devtools.resultstore.v2.GetTargetRequest")
	proto.RegisterType((*ListTargetsRequest)(nil), "google.devtools.resultstore.v2.ListTargetsRequest")
	proto.RegisterType((*ListTargetsResponse)(nil), "google.devtools.resultstore.v2.ListTargetsResponse")
	proto.RegisterType((*GetConfiguredTargetRequest)(nil), "google.devtools.resultstore.v2.GetConfiguredTargetRequest")
	proto.RegisterType((*ListConfiguredTargetsRequest)(nil), "google.devtools.resultstore.v2.ListConfiguredTargetsRequest")
	proto.RegisterType((*ListConfiguredTargetsResponse)(nil), "google.devtools.resultstore.v2.ListConfiguredTargetsResponse")
	proto.RegisterType((*GetActionRequest)(nil), "google.devtools.resultstore.v2.GetActionRequest")
	proto.RegisterType((*ListActionsRequest)(nil), "google.devtools.resultstore.v2.ListActionsRequest")
	proto.RegisterType((*ListActionsResponse)(nil), "google.devtools.resultstore.v2.ListActionsResponse")
	proto.RegisterType((*GetFileSetRequest)(nil), "google.devtools.resultstore.v2.GetFileSetRequest")
	proto.RegisterType((*ListFileSetsRequest)(nil), "google.devtools.resultstore.v2.ListFileSetsRequest")
	proto.RegisterType((*ListFileSetsResponse)(nil), "google.devtools.resultstore.v2.ListFileSetsResponse")
	proto.RegisterType((*TraverseFileSetsRequest)(nil), "google.devtools.resultstore.v2.TraverseFileSetsRequest")
	proto.RegisterType((*TraverseFileSetsResponse)(nil), "google.devtools.resultstore.v2.TraverseFileSetsResponse")
}

func init() {
	proto.RegisterFile("google/devtools/resultstore/v2/resultstore_download.proto", fileDescriptor_466641838cdba1d1)
}

var fileDescriptor_466641838cdba1d1 = []byte{
	// 1259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x98, 0xc1, 0x6f, 0xdc, 0x44,
	0x14, 0xc6, 0x3b, 0x49, 0x93, 0x26, 0x2f, 0x2d, 0x34, 0x93, 0x90, 0xb8, 0xa6, 0x69, 0x23, 0x53,
	0xd2, 0x90, 0x28, 0xeb, 0x74, 0x1b, 0x95, 0x74, 0xa1, 0xa8, 0x09, 0x11, 0x49, 0xa4, 0x16, 0x95,
	0x4d, 0xb8, 0xf4, 0xb2, 0x1a, 0xbc, 0xb3, 0x1b, 0x83, 0xd7, 0xb3, 0xb1, 0x67, 0x93, 0x52, 0x54,
	0x21, 0x21, 0x0e, 0x48, 0x9c, 0x4a, 0xc4, 0x05, 0x6e, 0x1c, 0xaa, 0x0a, 0x0e, 0x08, 0x09, 0x89,
	0x2b, 0x12, 0xb7, 0x1e, 0x01, 0xf1, 0x17, 0xf0, 0x7f, 0x80, 0x3c, 0x1e, 0xef, 0xda, 0x5e, 0xef,
	0xda, 0x0e, 0x42, 0x84, 0x5b, 0x3c, 0x9e, 0x6f, 0xfc, 0xe6, 0xf7, 0xbe, 0x1d, 0x7f, 0x31, 0xdc,
	0xac, 0x33, 0x56, 0xb7, 0xa8, 0x5e, 0xa5, 0x07, 0x9c, 0x31, 0xcb, 0xd5, 0x1d, 0xea, 0xb6, 0x2c,
	0xee, 0x72, 0xe6, 0x50, 0xfd, 0xa0, 0x18, 0xbe, 0xac, 0x54, 0xd9, 0xa1, 0x6d, 0x31, 0x52, 0x2d,
	0x34, 0x1d, 0xc6, 0x19, 0xbe, 0xe4, 0x4b, 0x0b, 0x81, 0xb4, 0x10, 0x9a, 0x5b, 0x38, 0x28, 0xaa,
	0x17, 0xe5, 0xd2, 0xa4, 0x69, 0xea, 0xc4, 0xb6, 0x19, 0x27, 0xdc, 0x64, 0xb6, 0xeb, 0xab, 0xd5,
	0xc5, 0x94, 0x07, 0x13, 0xc3, 0x9b, 0x2d, 0x27, 0x17, 0x53, 0x26, 0x1b, 0xcc, 0xae, 0x99, 0xf5,
	0x96, 0x43, 0x42, 0x9a, 0x1b, 0x19, 0x35, 0xb4, 0x5a, 0xe1, 0xc4, 0xa9, 0x53, 0x9e, 0x51, 0x17,
	0x50, 0xa8, 0x34, 0x28, 0x27, 0x55, 0xc2, 0x89, 0xd4, 0x2d, 0xa5, 0xe8, 0x6a, 0xa6, 0x45, 0x2b,
	0x6e, 0xfb, 0x31, 0x7a, 0xca, 0x74, 0xd3, 0x3e, 0x60, 0x46, 0x78, 0x3f, 0x69, 0xc0, 0x22, 0x9b,
	0x98, 0x0e, 0xb1, 0x37, 0x2c, 0x93, 0xda, 0xf2, 0x86, 0xb6, 0x00, 0x93, 0x9b, 0x94, 0x6f, 0xb7,
	0x17, 0x2f, 0xd3, 0xfd, 0x16, 0x75, 0x39, 0xc6, 0x70, 0xda, 0x26, 0x0d, 0xaa, 0xa0, 0x59, 0x34,
	0x3f, 0x5a, 0x16, 0x7f, 0x6b, 0x7f, 0x20, 0x50, 0x76, 0x28, 0x71, 0x8c, 0xbd, 0xce, 0x7c, 0x37,
	0x10, 0xbc, 0x08, 0xa3, 0x4d, 0x52, 0xa7, 0x15, 0xd7, 0x7c, 0xe8, 0xab, 0x86, 0xca, 0x23, 0xde,
	0xc0, 0x8e, 0xf9, 0x90, 0xe2, 0xcb, 0x00, 0xe2, 0x26, 0x67, 0x1f, 0x50, 0x5b, 0x19, 0xf0, 0xd6,
	0xdc, 0x3a, 0x55, 0x16, 0x82, 0x5d, 0x6f, 0x08, 0x2b, 0x30, 0xcc, 0x6a, 0x35, 0x97, 0x72, 0x65,
	0x70, 0x16, 0xcd, 0x0f, 0x6e, 0x9d, 0x2a, 0xcb, 0x6b, 0x3c, 0x09, 0x43, 0xfb, 0x2d, 0xea, 0x7c,
	0xa8, 0x9c, 0x16, 0x95, 0xf8, 0x17, 0x78, 0x06, 0xa0, 0xe9, 0xb0, 0xf7, 0xa9, 0xc1, 0x2b, 0x66,
	0x55, 0x19, 0x12, 0xb7, 0x46, 0xe5, 0xc8, 0x76, 0x15, 0x5f, 0x86, 0x31, 0xfa, 0x80, 0x18, 0xbc,
	0xd2, 0x20, 0xdc, 0xd8, 0x53, 0xce, 0xcc, 0xa2, 0xf9, 0x91, 0x32, 0x88, 0xa1, 0xbb, 0xde, 0xc8,
	0xfa, 0x59, 0x59, 0x90, 0xcb, 0x89, 0xc3, 0xb5, 0xc7, 0x08, 0x2e, 0x24, 0x6c, 0xcc, 0x6d, 0x32,
	0xdb, 0xa5, 0xf8, 0x0e, 0x8c, 0x75, 0xe0, 0xbb, 0x0a, 0x9a, 0x1d, 0x9c, 0x1f, 0x2b, 0x2e, 0x14,
	0xfa, 0xbb, 0xbd, 0x10, 0x42, 0x1a, 0x96, 0xe3, 0x39, 0x78, 0xde, 0xa6, 0x0f, 0x78, 0x25, 0xce,
	0xa3, 0x7c, 0xce, 0x1b, 0xbe, 0x17, 0x10, 0xd1, 0x4a, 0x70, 0x25, 0xd2, 0x98, 0x0d, 0x69, 0xb3,
	0xbb, 0xd2, 0x65, 0xfd, 0x1a, 0xb5, 0x04, 0xd3, 0x9b, 0x94, 0xbf, 0x19, 0xfe, 0x11, 0xf4, 0x9b,
	0xfe, 0x03, 0x82, 0x0b, 0x77, 0x4c, 0x37, 0x2a, 0x68, 0x37, 0x76, 0x0a, 0x86, 0x9b, 0xc4, 0xa1,
	0x36, 0x97, 0x1a, 0x79, 0x15, 0x6d, 0xf8, 0x40, 0xdf, 0x86, 0x0f, 0xf6, 0x6b, 0xf8, 0xe9, 0x58,
	0xc3, 0xa7, 0x60, 0xb8, 0x66, 0x5a, 0x9c, 0x3a, 0xb2, 0xad, 0xf2, 0x2a, 0xd6, 0xb2, 0xaf, 0x11,
	0xa8, 0x49, 0x35, 0xcb, 0x9e, 0xbd, 0x0b, 0xcf, 0x45, 0xce, 0x80, 0xa0, 0x6d, 0x4b, 0x69, 0x6d,
	0x8b, 0x42, 0x8b, 0x2d, 0x92, 0xb9, 0x79, 0x73, 0x70, 0x7e, 0x93, 0xf2, 0x5d, 0xf1, 0x0b, 0xec,
	0x47, 0xfe, 0x5b, 0x04, 0xd8, 0xdb, 0x85, 0x3f, 0xf3, 0x84, 0x23, 0xff, 0x18, 0x26, 0x22, 0xb5,
	0x4a, 0xd4, 0xb7, 0xe1, 0x8c, 0x7f, 0xd4, 0x04, 0x8c, 0xe7, 0xd2, 0x18, 0x4b, 0x2e, 0x81, 0x2c,
	0x33, 0xd5, 0x65, 0x50, 0x43, 0xb6, 0xa6, 0xd5, 0x74, 0xbe, 0x3f, 0x22, 0xb8, 0x18, 0x76, 0x49,
	0xa0, 0x39, 0xe1, 0xa4, 0x9f, 0x22, 0x98, 0xe9, 0x51, 0xb6, 0x84, 0x5e, 0x01, 0xdc, 0xf5, 0xbe,
	0x0a, 0xf8, 0x2f, 0x67, 0xf5, 0x78, 0x9b, 0xe0, 0xb8, 0x11, 0x7f, 0x50, 0x4e, 0xa7, 0xaf, 0x19,
	0x69, 0x67, 0x4c, 0xe0, 0x74, 0x7f, 0xe6, 0xff, 0xc3, 0xe9, 0xed, 0x5a, 0x3b, 0x4e, 0xf7, 0x53,
	0x48, 0x66, 0xa7, 0x4b, 0x2e, 0x81, 0x2c, 0x33, 0xd5, 0xab, 0x30, 0xbe, 0x49, 0xf9, 0x5b, 0xa6,
	0x45, 0x77, 0xfa, 0x1b, 0xfc, 0x3b, 0xe4, 0x97, 0x2a, 0xa7, 0x9e, 0x70, 0xae, 0x9f, 0x22, 0x98,
	0x8c, 0x56, 0x2b, 0xc9, 0x6e, 0xc0, 0x68, 0x10, 0x87, 0x02, 0xb6, 0x57, 0xd3, 0xd8, 0x06, 0x74,
	0x46, 0x6a, 0x72, 0xb5, 0xcc, 0x74, 0x8f, 0x10, 0x4c, 0xef, 0x3a, 0xe4, 0x80, 0x3a, 0x2e, 0x8d,
	0x83, 0x4b, 0x80, 0xfc, 0x6f, 0x41, 0x8b, 0xc1, 0xf9, 0x0c, 0x81, 0xd2, 0x5d, 0xd5, 0x7f, 0x01,
	0xa8, 0xf8, 0xd7, 0x24, 0x4c, 0x94, 0xc5, 0x62, 0x3b, 0xde, 0x62, 0x41, 0xf4, 0xc0, 0x47, 0x08,
	0xce, 0x45, 0x42, 0x09, 0x5e, 0x49, 0x2b, 0x22, 0x29, 0x5c, 0xaa, 0x39, 0xc2, 0x93, 0x36, 0xfb,
	0xc9, 0x6f, 0x7f, 0x1e, 0x0d, 0xa8, 0x58, 0xf1, 0x32, 0xed, 0x47, 0x5e, 0x3f, 0x6e, 0x85, 0xe2,
	0x94, 0xbe, 0xf0, 0x08, 0x3f, 0x45, 0x30, 0xde, 0x95, 0xde, 0xf0, 0x6a, 0xda, 0x33, 0x7a, 0x25,
	0x59, 0xf5, 0xe6, 0x31, 0x94, 0x7e, 0x9b, 0xb4, 0x4b, 0xa2, 0x58, 0x05, 0x4f, 0x45, 0x13, 0xbb,
	0x5b, 0x72, 0x85, 0x04, 0x3f, 0x43, 0x30, 0xd3, 0x37, 0xd5, 0xe1, 0x8d, 0x5c, 0x40, 0x7b, 0x84,
	0x42, 0x35, 0xf5, 0x15, 0x10, 0x17, 0x6a, 0xd7, 0x44, 0xe5, 0x8b, 0xf8, 0x95, 0x1e, 0x98, 0xdb,
	0xff, 0xe6, 0x04, 0x8a, 0x47, 0xf8, 0x09, 0x12, 0x67, 0x7f, 0x24, 0x31, 0xe1, 0x57, 0x33, 0xd4,
	0x9f, 0x14, 0x4c, 0xd5, 0x7c, 0xc9, 0x4c, 0x5b, 0x10, 0xf5, 0x5e, 0xc1, 0x5a, 0xaf, 0x7a, 0xfd,
	0x57, 0x9a, 0x30, 0xc8, 0x4f, 0xf2, 0xdd, 0x13, 0xcd, 0x8a, 0x38, 0xb5, 0xcf, 0x3d, 0x33, 0xb1,
	0x5a, 0x3a, 0x8e, 0x54, 0x7a, 0x24, 0x5a, 0xb9, 0x7f, 0x2e, 0xc7, 0x2c, 0x1d, 0x14, 0x8f, 0x1f,
	0x23, 0x18, 0x6d, 0x07, 0x49, 0xbc, 0x9c, 0x81, 0x6d, 0x24, 0x13, 0xa9, 0x19, 0xa3, 0x58, 0x3a,
	0x4d, 0x99, 0x30, 0x3c, 0x9a, 0xdf, 0x20, 0x18, 0x0b, 0xe5, 0x40, 0x5c, 0xcc, 0xc2, 0x22, 0x1a,
	0xbb, 0xd4, 0xeb, 0xb9, 0x34, 0x39, 0xc0, 0x05, 0x91, 0xf2, 0x17, 0x04, 0x13, 0x09, 0x59, 0x11,
	0x97, 0x72, 0xd8, 0x33, 0x16, 0x30, 0xd5, 0xdc, 0xb9, 0x4a, 0x7b, 0x43, 0x54, 0xbc, 0x8a, 0x6f,
	0xa4, 0x62, 0xd5, 0xbb, 0x12, 0x98, 0x87, 0xfa, 0x77, 0x04, 0x2f, 0x24, 0xe6, 0x40, 0xfc, 0x7a,
	0x1e, 0x03, 0xc6, 0x53, 0xaf, 0x7a, 0xeb, 0x98, 0x6a, 0xd9, 0x88, 0xe8, 0xb6, 0x92, 0x1a, 0x11,
	0xf2, 0x4b, 0xf7, 0xce, 0xf0, 0xf7, 0xbe, 0xab, 0xfd, 0x70, 0x94, 0xc9, 0xd5, 0x91, 0x7c, 0xa9,
	0x66, 0x8c, 0x5d, 0xda, 0x96, 0xa8, 0x73, 0x1d, 0xdf, 0x3e, 0x16, 0x7e, 0xf9, 0xc5, 0x49, 0x34,
	0xe2, 0x67, 0xe9, 0x79, 0x99, 0x08, 0xb3, 0x79, 0x3e, 0x1a, 0x75, 0xb3, 0x79, 0x3e, 0x16, 0x39,
	0x63, 0x5b, 0xe8, 0x8f, 0x3a, 0xd1, 0x43, 0xc1, 0x2e, 0xf0, 0x97, 0x08, 0xa0, 0x93, 0x29, 0xf1,
	0xb5, 0x0c, 0xd4, 0xa3, 0xf9, 0x53, 0xcd, 0x1a, 0x38, 0xb4, 0x45, 0x51, 0xf4, 0xcb, 0xf8, 0xa5,
	0x5e, 0xdc, 0x83, 0x40, 0xe2, 0xa1, 0x7d, 0x82, 0xe0, 0x6c, 0x38, 0x13, 0xe2, 0x4c, 0x9c, 0x62,
	0xb1, 0x4d, 0x5d, 0xc9, 0x27, 0x92, 0x74, 0xa3, 0x85, 0x26, 0x9f, 0x28, 0xed, 0xf0, 0xf4, 0xd5,
	0x00, 0x9c, 0x8f, 0xe7, 0xb3, 0xf4, 0xd7, 0x5d, 0x8f, 0x9c, 0xa9, 0xae, 0xe6, 0x17, 0xca, 0xa2,
	0xbf, 0x40, 0xa2, 0xea, 0xcf, 0x11, 0x5e, 0xc9, 0xc0, 0xb7, 0xc4, 0x63, 0xeb, 0xdc, 0xdf, 0xc1,
	0xef, 0xfc, 0xd3, 0xdf, 0x43, 0xd7, 0xa2, 0xea, 0xdb, 0xcf, 0xd6, 0xd4, 0xf0, 0x06, 0xfc, 0xcd,
	0x91, 0xa6, 0xe9, 0x16, 0x0c, 0xd6, 0xf8, 0x75, 0xad, 0xb0, 0xc7, 0x79, 0xd3, 0x2d, 0xe9, 0xfa,
	0xe1, 0xe1, 0x61, 0xec, 0xa6, 0x4e, 0x5a, 0x7c, 0x4f, 0x37, 0x2c, 0xd6, 0xaa, 0x2e, 0x35, 0x2d,
	0xc2, 0x6b, 0xcc, 0x69, 0xac, 0xef, 0x83, 0x66, 0xb0, 0x46, 0x0a, 0xa3, 0x7b, 0xe8, 0xfe, 0xb6,
	0x9c, 0x51, 0x67, 0x16, 0xb1, 0xeb, 0x05, 0xe6, 0xd4, 0xf5, 0x3a, 0xb5, 0xc5, 0xa7, 0x4d, 0xbd,
	0xf3, 0x98, 0x5e, 0xdf, 0x48, 0x5f, 0x0b, 0x5d, 0xbe, 0x37, 0x2c, 0x54, 0xd7, 0xff, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x9a, 0x14, 0x81, 0x0e, 0x02, 0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResultStoreDownloadClient is the client API for ResultStoreDownload service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResultStoreDownloadClient interface {
	// Retrieves the invocation with the given name.
	//
	// An error will be reported in the following cases:
	// - If the invocation is not found.
	// - If the given invocation name is badly formatted.
	// - If no field mask was given.
	GetInvocation(ctx context.Context, in *GetInvocationRequest, opts ...grpc.CallOption) (*Invocation, error)
	// Searches for invocations matching the given query parameters. Results will
	// be ordered by timing.start_time with most recent first, but total ordering
	// of results is not guaranteed when difference in timestamps is very small.
	// Results may be stale.
	//
	//
	// An error will be reported in the following cases:
	// - If a query string is not provided
	// - If no field mask was given.
	SearchInvocations(ctx context.Context, in *SearchInvocationsRequest, opts ...grpc.CallOption) (*SearchInvocationsResponse, error)
	// Retrieves the metadata for an invocation with the given name.
	//
	// An error will be reported in the following cases:
	// - If the invocation is not found.
	// - If the given invocation name is badly formatted.
	GetInvocationDownloadMetadata(ctx context.Context, in *GetInvocationDownloadMetadataRequest, opts ...grpc.CallOption) (*DownloadMetadata, error)
	// Retrieves the configuration with the given name.
	//
	// An error will be reported in the following cases:
	// - If the configuration or its parent invocation is not found.
	// - If the given configuration name is badly formatted.
	// - If no field mask was given.
	GetConfiguration(ctx context.Context, in *GetConfigurationRequest, opts ...grpc.CallOption) (*Configuration, error)
	// Retrieves all configurations for a parent invocation.
	// This might be limited by user or server,
	// in which case a continuation token is provided.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent invocation is not found.
	// - If the given parent invocation name is badly formatted.
	// - If no field mask was given.
	ListConfigurations(ctx context.Context, in *ListConfigurationsRequest, opts ...grpc.CallOption) (*ListConfigurationsResponse, error)
	// Retrieves the target with the given name.
	//
	// An error will be reported in the following cases:
	// - If the target or its parent invocation is not found.
	// - If the given target name is badly formatted.
	// - If no field mask was given.
	GetTarget(ctx context.Context, in *GetTargetRequest, opts ...grpc.CallOption) (*Target, error)
	// Retrieves all targets for a parent invocation.  This might be limited by
	// user or server, in which case a continuation token is provided.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent is not found.
	// - If the given parent name is badly formatted.
	// - If no field mask was given.
	ListTargets(ctx context.Context, in *ListTargetsRequest, opts ...grpc.CallOption) (*ListTargetsResponse, error)
	// Retrieves the configured target with the given name.
	//
	// An error will be reported in the following cases:
	// - If the configured target is not found.
	// - If the given name is badly formatted.
	// - If no field mask was given.
	GetConfiguredTarget(ctx context.Context, in *GetConfiguredTargetRequest, opts ...grpc.CallOption) (*ConfiguredTarget, error)
	// Retrieves all configured targets for a parent invocation/target.
	// This might be limited by user or server, in which case a continuation
	// token is provided.  Supports '-' for targetId meaning all targets.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent is not found.
	// - If the given parent name is badly formatted.
	// - If no field mask was given.
	ListConfiguredTargets(ctx context.Context, in *ListConfiguredTargetsRequest, opts ...grpc.CallOption) (*ListConfiguredTargetsResponse, error)
	// Retrieves the action with the given name.
	//
	// An error will be reported in the following cases:
	// - If the action is not found.
	// - If the given name is badly formatted.
	// - If no field mask was given.
	GetAction(ctx context.Context, in *GetActionRequest, opts ...grpc.CallOption) (*Action, error)
	// Retrieves all actions for a parent invocation/target/configuration.
	// This might be limited by user or server, in which case a continuation
	// token is provided.  Supports '-' for configurationId to mean all
	// actions for all configurations for a target, or '-' for targetId and
	// configurationId to mean all actions for all configurations and all targets.
	// Does not support targetId '-' with a specified configuration.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent is not found.
	// - If the given parent name is badly formatted.
	// - If no field mask was given.
	ListActions(ctx context.Context, in *ListActionsRequest, opts ...grpc.CallOption) (*ListActionsResponse, error)
	// Retrieves the file set with the given name.
	//
	// An error will be reported in the following cases:
	// - If the file set or its parent invocation is not found.
	// - If the given file set name is badly formatted.
	// - If no field mask was given.
	GetFileSet(ctx context.Context, in *GetFileSetRequest, opts ...grpc.CallOption) (*FileSet, error)
	// Retrieves all file sets for a parent invocation.
	// This might be limited by user or server,
	// in which case a continuation token is provided.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent invocation is not found.
	// - If the given parent invocation name is badly formatted.
	// - If no field mask was given.
	ListFileSets(ctx context.Context, in *ListFileSetsRequest, opts ...grpc.CallOption) (*ListFileSetsResponse, error)
	// Returns the transitive closure of FileSets. This might be limited by user
	// or server, in which case a continuation token is provided.
	// The order in which results are returned is undefined, and unstable.
	//
	// An error will be reported in the following cases:
	// - If page_token is too large to continue the calculation.
	// - If the resource is not found.
	// - If the given resource name is badly formatted.
	// - If no field mask was given.
	TraverseFileSets(ctx context.Context, in *TraverseFileSetsRequest, opts ...grpc.CallOption) (*TraverseFileSetsResponse, error)
}

type resultStoreDownloadClient struct {
	cc *grpc.ClientConn
}

func NewResultStoreDownloadClient(cc *grpc.ClientConn) ResultStoreDownloadClient {
	return &resultStoreDownloadClient{cc}
}

func (c *resultStoreDownloadClient) GetInvocation(ctx context.Context, in *GetInvocationRequest, opts ...grpc.CallOption) (*Invocation, error) {
	out := new(Invocation)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetInvocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) SearchInvocations(ctx context.Context, in *SearchInvocationsRequest, opts ...grpc.CallOption) (*SearchInvocationsResponse, error) {
	out := new(SearchInvocationsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/SearchInvocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) GetInvocationDownloadMetadata(ctx context.Context, in *GetInvocationDownloadMetadataRequest, opts ...grpc.CallOption) (*DownloadMetadata, error) {
	out := new(DownloadMetadata)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetInvocationDownloadMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) GetConfiguration(ctx context.Context, in *GetConfigurationRequest, opts ...grpc.CallOption) (*Configuration, error) {
	out := new(Configuration)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) ListConfigurations(ctx context.Context, in *ListConfigurationsRequest, opts ...grpc.CallOption) (*ListConfigurationsResponse, error) {
	out := new(ListConfigurationsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/ListConfigurations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) GetTarget(ctx context.Context, in *GetTargetRequest, opts ...grpc.CallOption) (*Target, error) {
	out := new(Target)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) ListTargets(ctx context.Context, in *ListTargetsRequest, opts ...grpc.CallOption) (*ListTargetsResponse, error) {
	out := new(ListTargetsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/ListTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) GetConfiguredTarget(ctx context.Context, in *GetConfiguredTargetRequest, opts ...grpc.CallOption) (*ConfiguredTarget, error) {
	out := new(ConfiguredTarget)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetConfiguredTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) ListConfiguredTargets(ctx context.Context, in *ListConfiguredTargetsRequest, opts ...grpc.CallOption) (*ListConfiguredTargetsResponse, error) {
	out := new(ListConfiguredTargetsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/ListConfiguredTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) GetAction(ctx context.Context, in *GetActionRequest, opts ...grpc.CallOption) (*Action, error) {
	out := new(Action)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) ListActions(ctx context.Context, in *ListActionsRequest, opts ...grpc.CallOption) (*ListActionsResponse, error) {
	out := new(ListActionsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/ListActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) GetFileSet(ctx context.Context, in *GetFileSetRequest, opts ...grpc.CallOption) (*FileSet, error) {
	out := new(FileSet)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/GetFileSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) ListFileSets(ctx context.Context, in *ListFileSetsRequest, opts ...grpc.CallOption) (*ListFileSetsResponse, error) {
	out := new(ListFileSetsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/ListFileSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resultStoreDownloadClient) TraverseFileSets(ctx context.Context, in *TraverseFileSetsRequest, opts ...grpc.CallOption) (*TraverseFileSetsResponse, error) {
	out := new(TraverseFileSetsResponse)
	err := c.cc.Invoke(ctx, "/google.devtools.resultstore.v2.ResultStoreDownload/TraverseFileSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResultStoreDownloadServer is the server API for ResultStoreDownload service.
type ResultStoreDownloadServer interface {
	// Retrieves the invocation with the given name.
	//
	// An error will be reported in the following cases:
	// - If the invocation is not found.
	// - If the given invocation name is badly formatted.
	// - If no field mask was given.
	GetInvocation(context.Context, *GetInvocationRequest) (*Invocation, error)
	// Searches for invocations matching the given query parameters. Results will
	// be ordered by timing.start_time with most recent first, but total ordering
	// of results is not guaranteed when difference in timestamps is very small.
	// Results may be stale.
	//
	//
	// An error will be reported in the following cases:
	// - If a query string is not provided
	// - If no field mask was given.
	SearchInvocations(context.Context, *SearchInvocationsRequest) (*SearchInvocationsResponse, error)
	// Retrieves the metadata for an invocation with the given name.
	//
	// An error will be reported in the following cases:
	// - If the invocation is not found.
	// - If the given invocation name is badly formatted.
	GetInvocationDownloadMetadata(context.Context, *GetInvocationDownloadMetadataRequest) (*DownloadMetadata, error)
	// Retrieves the configuration with the given name.
	//
	// An error will be reported in the following cases:
	// - If the configuration or its parent invocation is not found.
	// - If the given configuration name is badly formatted.
	// - If no field mask was given.
	GetConfiguration(context.Context, *GetConfigurationRequest) (*Configuration, error)
	// Retrieves all configurations for a parent invocation.
	// This might be limited by user or server,
	// in which case a continuation token is provided.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent invocation is not found.
	// - If the given parent invocation name is badly formatted.
	// - If no field mask was given.
	ListConfigurations(context.Context, *ListConfigurationsRequest) (*ListConfigurationsResponse, error)
	// Retrieves the target with the given name.
	//
	// An error will be reported in the following cases:
	// - If the target or its parent invocation is not found.
	// - If the given target name is badly formatted.
	// - If no field mask was given.
	GetTarget(context.Context, *GetTargetRequest) (*Target, error)
	// Retrieves all targets for a parent invocation.  This might be limited by
	// user or server, in which case a continuation token is provided.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent is not found.
	// - If the given parent name is badly formatted.
	// - If no field mask was given.
	ListTargets(context.Context, *ListTargetsRequest) (*ListTargetsResponse, error)
	// Retrieves the configured target with the given name.
	//
	// An error will be reported in the following cases:
	// - If the configured target is not found.
	// - If the given name is badly formatted.
	// - If no field mask was given.
	GetConfiguredTarget(context.Context, *GetConfiguredTargetRequest) (*ConfiguredTarget, error)
	// Retrieves all configured targets for a parent invocation/target.
	// This might be limited by user or server, in which case a continuation
	// token is provided.  Supports '-' for targetId meaning all targets.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent is not found.
	// - If the given parent name is badly formatted.
	// - If no field mask was given.
	ListConfiguredTargets(context.Context, *ListConfiguredTargetsRequest) (*ListConfiguredTargetsResponse, error)
	// Retrieves the action with the given name.
	//
	// An error will be reported in the following cases:
	// - If the action is not found.
	// - If the given name is badly formatted.
	// - If no field mask was given.
	GetAction(context.Context, *GetActionRequest) (*Action, error)
	// Retrieves all actions for a parent invocation/target/configuration.
	// This might be limited by user or server, in which case a continuation
	// token is provided.  Supports '-' for configurationId to mean all
	// actions for all configurations for a target, or '-' for targetId and
	// configurationId to mean all actions for all configurations and all targets.
	// Does not support targetId '-' with a specified configuration.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent is not found.
	// - If the given parent name is badly formatted.
	// - If no field mask was given.
	ListActions(context.Context, *ListActionsRequest) (*ListActionsResponse, error)
	// Retrieves the file set with the given name.
	//
	// An error will be reported in the following cases:
	// - If the file set or its parent invocation is not found.
	// - If the given file set name is badly formatted.
	// - If no field mask was given.
	GetFileSet(context.Context, *GetFileSetRequest) (*FileSet, error)
	// Retrieves all file sets for a parent invocation.
	// This might be limited by user or server,
	// in which case a continuation token is provided.
	// The order in which results are returned is undefined, but stable.
	//
	// An error will be reported in the following cases:
	// - If the parent invocation is not found.
	// - If the given parent invocation name is badly formatted.
	// - If no field mask was given.
	ListFileSets(context.Context, *ListFileSetsRequest) (*ListFileSetsResponse, error)
	// Returns the transitive closure of FileSets. This might be limited by user
	// or server, in which case a continuation token is provided.
	// The order in which results are returned is undefined, and unstable.
	//
	// An error will be reported in the following cases:
	// - If page_token is too large to continue the calculation.
	// - If the resource is not found.
	// - If the given resource name is badly formatted.
	// - If no field mask was given.
	TraverseFileSets(context.Context, *TraverseFileSetsRequest) (*TraverseFileSetsResponse, error)
}

func RegisterResultStoreDownloadServer(s *grpc.Server, srv ResultStoreDownloadServer) {
	s.RegisterService(&_ResultStoreDownload_serviceDesc, srv)
}

func _ResultStoreDownload_GetInvocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetInvocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetInvocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetInvocation(ctx, req.(*GetInvocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_SearchInvocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchInvocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).SearchInvocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/SearchInvocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).SearchInvocations(ctx, req.(*SearchInvocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_GetInvocationDownloadMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvocationDownloadMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetInvocationDownloadMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetInvocationDownloadMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetInvocationDownloadMetadata(ctx, req.(*GetInvocationDownloadMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_GetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetConfiguration(ctx, req.(*GetConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_ListConfigurations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConfigurationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).ListConfigurations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/ListConfigurations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).ListConfigurations(ctx, req.(*ListConfigurationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_GetTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetTarget(ctx, req.(*GetTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_ListTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTargetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).ListTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/ListTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).ListTargets(ctx, req.(*ListTargetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_GetConfiguredTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfiguredTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetConfiguredTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetConfiguredTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetConfiguredTarget(ctx, req.(*GetConfiguredTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_ListConfiguredTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListConfiguredTargetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).ListConfiguredTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/ListConfiguredTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).ListConfiguredTargets(ctx, req.(*ListConfiguredTargetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_GetAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetAction(ctx, req.(*GetActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_ListActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).ListActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/ListActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).ListActions(ctx, req.(*ListActionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_GetFileSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).GetFileSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/GetFileSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).GetFileSet(ctx, req.(*GetFileSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_ListFileSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFileSetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).ListFileSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/ListFileSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).ListFileSets(ctx, req.(*ListFileSetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResultStoreDownload_TraverseFileSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TraverseFileSetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultStoreDownloadServer).TraverseFileSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.devtools.resultstore.v2.ResultStoreDownload/TraverseFileSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultStoreDownloadServer).TraverseFileSets(ctx, req.(*TraverseFileSetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResultStoreDownload_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.devtools.resultstore.v2.ResultStoreDownload",
	HandlerType: (*ResultStoreDownloadServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInvocation",
			Handler:    _ResultStoreDownload_GetInvocation_Handler,
		},
		{
			MethodName: "SearchInvocations",
			Handler:    _ResultStoreDownload_SearchInvocations_Handler,
		},
		{
			MethodName: "GetInvocationDownloadMetadata",
			Handler:    _ResultStoreDownload_GetInvocationDownloadMetadata_Handler,
		},
		{
			MethodName: "GetConfiguration",
			Handler:    _ResultStoreDownload_GetConfiguration_Handler,
		},
		{
			MethodName: "ListConfigurations",
			Handler:    _ResultStoreDownload_ListConfigurations_Handler,
		},
		{
			MethodName: "GetTarget",
			Handler:    _ResultStoreDownload_GetTarget_Handler,
		},
		{
			MethodName: "ListTargets",
			Handler:    _ResultStoreDownload_ListTargets_Handler,
		},
		{
			MethodName: "GetConfiguredTarget",
			Handler:    _ResultStoreDownload_GetConfiguredTarget_Handler,
		},
		{
			MethodName: "ListConfiguredTargets",
			Handler:    _ResultStoreDownload_ListConfiguredTargets_Handler,
		},
		{
			MethodName: "GetAction",
			Handler:    _ResultStoreDownload_GetAction_Handler,
		},
		{
			MethodName: "ListActions",
			Handler:    _ResultStoreDownload_ListActions_Handler,
		},
		{
			MethodName: "GetFileSet",
			Handler:    _ResultStoreDownload_GetFileSet_Handler,
		},
		{
			MethodName: "ListFileSets",
			Handler:    _ResultStoreDownload_ListFileSets_Handler,
		},
		{
			MethodName: "TraverseFileSets",
			Handler:    _ResultStoreDownload_TraverseFileSets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/devtools/resultstore/v2/resultstore_download.proto",
}
