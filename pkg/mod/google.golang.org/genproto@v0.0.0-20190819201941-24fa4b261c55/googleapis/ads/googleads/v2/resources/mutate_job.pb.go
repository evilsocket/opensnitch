// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v2/resources/mutate_job.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v2/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A list of mutates being processed asynchronously. The mutates are uploaded
// by the user. The mutates themselves arenâ€™t readable and the results of the
// job can only be read using MutateJobService.ListMutateJobResults.
type MutateJob struct {
	// The resource name of the mutate job.
	// Mutate job resource names have the form:
	//
	// `customers/{customer_id}/mutateJobs/{mutate_job_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// ID of this mutate job.
	Id *wrappers.Int64Value `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The next sequence token to use when adding operations. Only set when the
	// mutate job status is PENDING.
	NextAddSequenceToken *wrappers.StringValue `protobuf:"bytes,3,opt,name=next_add_sequence_token,json=nextAddSequenceToken,proto3" json:"next_add_sequence_token,omitempty"`
	// Contains additional information about this mutate job.
	Metadata *MutateJob_MutateJobMetadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Status of this mutate job.
	Status enums.MutateJobStatusEnum_MutateJobStatus `protobuf:"varint,5,opt,name=status,proto3,enum=google.ads.googleads.v2.enums.MutateJobStatusEnum_MutateJobStatus" json:"status,omitempty"`
	// The resource name of the long-running operation that can be used to poll
	// for completion. Only set when the mutate job status is RUNNING or DONE.
	LongRunningOperation *wrappers.StringValue `protobuf:"bytes,6,opt,name=long_running_operation,json=longRunningOperation,proto3" json:"long_running_operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MutateJob) Reset()         { *m = MutateJob{} }
func (m *MutateJob) String() string { return proto.CompactTextString(m) }
func (*MutateJob) ProtoMessage()    {}
func (*MutateJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b00c4276f3d9f90, []int{0}
}

func (m *MutateJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateJob.Unmarshal(m, b)
}
func (m *MutateJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateJob.Marshal(b, m, deterministic)
}
func (m *MutateJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateJob.Merge(m, src)
}
func (m *MutateJob) XXX_Size() int {
	return xxx_messageInfo_MutateJob.Size(m)
}
func (m *MutateJob) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateJob.DiscardUnknown(m)
}

var xxx_messageInfo_MutateJob proto.InternalMessageInfo

func (m *MutateJob) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *MutateJob) GetId() *wrappers.Int64Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *MutateJob) GetNextAddSequenceToken() *wrappers.StringValue {
	if m != nil {
		return m.NextAddSequenceToken
	}
	return nil
}

func (m *MutateJob) GetMetadata() *MutateJob_MutateJobMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *MutateJob) GetStatus() enums.MutateJobStatusEnum_MutateJobStatus {
	if m != nil {
		return m.Status
	}
	return enums.MutateJobStatusEnum_UNSPECIFIED
}

func (m *MutateJob) GetLongRunningOperation() *wrappers.StringValue {
	if m != nil {
		return m.LongRunningOperation
	}
	return nil
}

// Additional information about the mutate job. This message is also used as
// metadata returned in mutate job Long Running Operations.
type MutateJob_MutateJobMetadata struct {
	// The time when this mutate job was created.
	// Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00"
	CreationDateTime *wrappers.StringValue `protobuf:"bytes,1,opt,name=creation_date_time,json=creationDateTime,proto3" json:"creation_date_time,omitempty"`
	// The time when this mutate job was completed.
	// Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00"
	CompletionDateTime *wrappers.StringValue `protobuf:"bytes,2,opt,name=completion_date_time,json=completionDateTime,proto3" json:"completion_date_time,omitempty"`
	// The fraction (between 0.0 and 1.0) of mutates that have been processed.
	// This is empty if the job hasn't started running yet.
	EstimatedCompletionRatio *wrappers.DoubleValue `protobuf:"bytes,3,opt,name=estimated_completion_ratio,json=estimatedCompletionRatio,proto3" json:"estimated_completion_ratio,omitempty"`
	// The number of mutate operations in the mutate job.
	OperationCount *wrappers.Int64Value `protobuf:"bytes,4,opt,name=operation_count,json=operationCount,proto3" json:"operation_count,omitempty"`
	// The number of mutate operations executed by the mutate job.
	// Present only if the job has started running.
	ExecutedOperationCount *wrappers.Int64Value `protobuf:"bytes,5,opt,name=executed_operation_count,json=executedOperationCount,proto3" json:"executed_operation_count,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *MutateJob_MutateJobMetadata) Reset()         { *m = MutateJob_MutateJobMetadata{} }
func (m *MutateJob_MutateJobMetadata) String() string { return proto.CompactTextString(m) }
func (*MutateJob_MutateJobMetadata) ProtoMessage()    {}
func (*MutateJob_MutateJobMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b00c4276f3d9f90, []int{0, 0}
}

func (m *MutateJob_MutateJobMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateJob_MutateJobMetadata.Unmarshal(m, b)
}
func (m *MutateJob_MutateJobMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateJob_MutateJobMetadata.Marshal(b, m, deterministic)
}
func (m *MutateJob_MutateJobMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateJob_MutateJobMetadata.Merge(m, src)
}
func (m *MutateJob_MutateJobMetadata) XXX_Size() int {
	return xxx_messageInfo_MutateJob_MutateJobMetadata.Size(m)
}
func (m *MutateJob_MutateJobMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateJob_MutateJobMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MutateJob_MutateJobMetadata proto.InternalMessageInfo

func (m *MutateJob_MutateJobMetadata) GetCreationDateTime() *wrappers.StringValue {
	if m != nil {
		return m.CreationDateTime
	}
	return nil
}

func (m *MutateJob_MutateJobMetadata) GetCompletionDateTime() *wrappers.StringValue {
	if m != nil {
		return m.CompletionDateTime
	}
	return nil
}

func (m *MutateJob_MutateJobMetadata) GetEstimatedCompletionRatio() *wrappers.DoubleValue {
	if m != nil {
		return m.EstimatedCompletionRatio
	}
	return nil
}

func (m *MutateJob_MutateJobMetadata) GetOperationCount() *wrappers.Int64Value {
	if m != nil {
		return m.OperationCount
	}
	return nil
}

func (m *MutateJob_MutateJobMetadata) GetExecutedOperationCount() *wrappers.Int64Value {
	if m != nil {
		return m.ExecutedOperationCount
	}
	return nil
}

func init() {
	proto.RegisterType((*MutateJob)(nil), "google.ads.googleads.v2.resources.MutateJob")
	proto.RegisterType((*MutateJob_MutateJobMetadata)(nil), "google.ads.googleads.v2.resources.MutateJob.MutateJobMetadata")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v2/resources/mutate_job.proto", fileDescriptor_8b00c4276f3d9f90)
}

var fileDescriptor_8b00c4276f3d9f90 = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdd, 0x6a, 0xd4, 0x4c,
	0x18, 0xc7, 0x49, 0xfa, 0x76, 0x79, 0x3b, 0x6a, 0xd5, 0xa1, 0xd4, 0xb0, 0x16, 0x69, 0x95, 0x42,
	0x41, 0x98, 0x40, 0xfc, 0x38, 0x88, 0x20, 0xa4, 0xad, 0x14, 0x17, 0xfa, 0x41, 0xb6, 0xee, 0xc1,
	0xb2, 0x10, 0x66, 0x33, 0x8f, 0x21, 0x9a, 0xcc, 0xc4, 0xcc, 0x4c, 0xed, 0xf5, 0x78, 0x24, 0x5e,
	0x8a, 0x77, 0xa2, 0xb7, 0xe0, 0x89, 0xe4, 0x6b, 0xb6, 0x6e, 0xd9, 0x6e, 0xcf, 0x9e, 0x64, 0xfe,
	0xbf, 0xdf, 0x7c, 0x3d, 0x0c, 0xf2, 0x12, 0x21, 0x92, 0x0c, 0x5c, 0xca, 0xa4, 0xdb, 0x94, 0x55,
	0x75, 0xe1, 0xb9, 0x25, 0x48, 0xa1, 0xcb, 0x18, 0xa4, 0x9b, 0x6b, 0x45, 0x15, 0x44, 0x9f, 0xc4,
	0x94, 0x14, 0xa5, 0x50, 0x02, 0xef, 0x34, 0x41, 0x42, 0x99, 0x24, 0x86, 0x21, 0x17, 0x1e, 0x31,
	0x4c, 0xff, 0xd5, 0x22, 0x2d, 0x70, 0x9d, 0x5f, 0x55, 0x46, 0x52, 0x51, 0xa5, 0x65, 0x63, 0xee,
	0x3f, 0x69, 0xb1, 0xfa, 0x6b, 0xaa, 0x3f, 0xba, 0x5f, 0x4b, 0x5a, 0x14, 0x50, 0x76, 0xe3, 0x5b,
	0x9d, 0xb6, 0x48, 0x5d, 0xca, 0xb9, 0x50, 0x54, 0xa5, 0x82, 0xb7, 0xa3, 0x4f, 0x7f, 0xf5, 0xd0,
	0xda, 0x71, 0x6d, 0x1e, 0x88, 0x29, 0x7e, 0x86, 0xee, 0x75, 0xeb, 0x89, 0x38, 0xcd, 0xc1, 0xb1,
	0xb6, 0xad, 0xbd, 0xb5, 0xf0, 0x6e, 0xf7, 0xf3, 0x84, 0xe6, 0x80, 0x9f, 0x23, 0x3b, 0x65, 0x8e,
	0xbd, 0x6d, 0xed, 0xdd, 0xf1, 0x1e, 0xb7, 0x9b, 0x21, 0xdd, 0xec, 0xe4, 0x3d, 0x57, 0xaf, 0x5f,
	0x8e, 0x68, 0xa6, 0x21, 0xb4, 0x53, 0x86, 0x87, 0xe8, 0x11, 0x87, 0x4b, 0x15, 0x51, 0xc6, 0x22,
	0x09, 0x5f, 0x34, 0xf0, 0x18, 0x22, 0x25, 0x3e, 0x03, 0x77, 0x56, 0x6a, 0xc3, 0xd6, 0x35, 0xc3,
	0x50, 0x95, 0x29, 0x4f, 0x1a, 0xc5, 0x46, 0x05, 0x07, 0x8c, 0x0d, 0x5b, 0xf4, 0xbc, 0x22, 0xf1,
	0x18, 0xfd, 0x9f, 0x83, 0xa2, 0x8c, 0x2a, 0xea, 0xfc, 0x57, 0x5b, 0xde, 0x92, 0xa5, 0xe7, 0x4b,
	0xcc, 0x36, 0x67, 0xd5, 0x71, 0x6b, 0x09, 0x8d, 0x0f, 0x8f, 0x51, 0xaf, 0x39, 0x5e, 0x67, 0x75,
	0xdb, 0xda, 0x5b, 0xf7, 0xf6, 0x17, 0x9a, 0xeb, 0x6b, 0x99, 0xb9, 0x86, 0x35, 0xf5, 0x8e, 0xeb,
	0x7c, 0xfe, 0x5f, 0xd8, 0x1a, 0x71, 0x88, 0x36, 0x33, 0xc1, 0x93, 0xa8, 0xd4, 0x9c, 0xa7, 0x3c,
	0x89, 0x44, 0x01, 0x65, 0x7d, 0x1b, 0x4e, 0xef, 0x36, 0x67, 0x51, 0xb1, 0x61, 0x83, 0x9e, 0x76,
	0x64, 0xff, 0xfb, 0x0a, 0x7a, 0x78, 0x6d, 0x3f, 0x78, 0x80, 0x70, 0x5c, 0x42, 0x9d, 0x88, 0x58,
	0xd5, 0x36, 0x2a, 0x6d, 0x6f, 0x73, 0xd9, 0x2c, 0x0f, 0x3a, 0xee, 0x90, 0x2a, 0x38, 0x4f, 0x73,
	0xc0, 0x27, 0x68, 0x23, 0x16, 0x79, 0x91, 0xc1, 0x9c, 0xcd, 0xbe, 0x85, 0x0d, 0xcf, 0x48, 0xe3,
	0x1b, 0xa3, 0x3e, 0x48, 0x95, 0xe6, 0x54, 0x01, 0x8b, 0xae, 0x98, 0xeb, 0x0d, 0x2d, 0xec, 0x8a,
	0x43, 0xa1, 0xa7, 0x19, 0x34, 0x56, 0xc7, 0xf0, 0x07, 0x06, 0x0f, 0x2b, 0x1a, 0x1f, 0xa2, 0xfb,
	0xe6, 0x50, 0xa3, 0x58, 0x68, 0xae, 0xda, 0x06, 0xb9, 0xb1, 0x51, 0xd7, 0x0d, 0x73, 0x50, 0x21,
	0xf8, 0x03, 0x72, 0xe0, 0x12, 0x62, 0x5d, 0x2d, 0x70, 0x5e, 0xb7, 0xba, 0x5c, 0xb7, 0xd9, 0xc1,
	0xa7, 0xff, 0x68, 0xf7, 0xff, 0x58, 0x68, 0x37, 0x16, 0xf9, 0xf2, 0x56, 0xdd, 0x5f, 0x37, 0x37,
	0x7a, 0x56, 0xf9, 0xcf, 0xac, 0xf1, 0xa0, 0x85, 0x12, 0x91, 0x51, 0x9e, 0x10, 0x51, 0x26, 0x6e,
	0x02, 0xbc, 0x9e, 0xbd, 0x7b, 0x2c, 0x8a, 0x54, 0xde, 0xf0, 0x24, 0xbd, 0x31, 0xd5, 0x37, 0x7b,
	0xe5, 0x28, 0x08, 0x7e, 0xd8, 0x3b, 0x47, 0x8d, 0x32, 0x60, 0x92, 0x34, 0x65, 0x55, 0x8d, 0x3c,
	0x12, 0x76, 0xc9, 0x9f, 0x5d, 0x66, 0x12, 0x30, 0x39, 0x31, 0x99, 0xc9, 0xc8, 0x9b, 0x98, 0xcc,
	0x6f, 0x7b, 0xb7, 0x19, 0xf0, 0xfd, 0x80, 0x49, 0xdf, 0x37, 0x29, 0xdf, 0x1f, 0x79, 0xbe, 0x6f,
	0x72, 0xd3, 0x5e, 0xbd, 0xd8, 0x17, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x05, 0x44, 0x98, 0x06,
	0x3e, 0x05, 0x00, 0x00,
}
