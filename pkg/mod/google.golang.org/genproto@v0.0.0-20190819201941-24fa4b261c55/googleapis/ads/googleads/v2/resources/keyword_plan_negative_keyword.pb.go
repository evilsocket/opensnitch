// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v2/resources/keyword_plan_negative_keyword.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	enums "google.golang.org/genproto/googleapis/ads/googleads/v2/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Keyword Plan negative keyword.
// Max number of keyword plan negative keywords per plan: 1000.
type KeywordPlanNegativeKeyword struct {
	// The resource name of the Keyword Plan negative keyword.
	// KeywordPlanNegativeKeyword resource names have the form:
	//
	// `customers/{customer_id}/keywordPlanNegativeKeywords/{kp_negative_keyword_id}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// The Keyword Plan campaign to which this negative keyword belongs.
	KeywordPlanCampaign *wrappers.StringValue `protobuf:"bytes,2,opt,name=keyword_plan_campaign,json=keywordPlanCampaign,proto3" json:"keyword_plan_campaign,omitempty"`
	// The ID of the Keyword Plan negative keyword.
	Id *wrappers.Int64Value `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// The keyword text.
	Text *wrappers.StringValue `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	// The keyword match type.
	MatchType            enums.KeywordMatchTypeEnum_KeywordMatchType `protobuf:"varint,5,opt,name=match_type,json=matchType,proto3,enum=google.ads.googleads.v2.enums.KeywordMatchTypeEnum_KeywordMatchType" json:"match_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *KeywordPlanNegativeKeyword) Reset()         { *m = KeywordPlanNegativeKeyword{} }
func (m *KeywordPlanNegativeKeyword) String() string { return proto.CompactTextString(m) }
func (*KeywordPlanNegativeKeyword) ProtoMessage()    {}
func (*KeywordPlanNegativeKeyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b20929787d8602, []int{0}
}

func (m *KeywordPlanNegativeKeyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeywordPlanNegativeKeyword.Unmarshal(m, b)
}
func (m *KeywordPlanNegativeKeyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeywordPlanNegativeKeyword.Marshal(b, m, deterministic)
}
func (m *KeywordPlanNegativeKeyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeywordPlanNegativeKeyword.Merge(m, src)
}
func (m *KeywordPlanNegativeKeyword) XXX_Size() int {
	return xxx_messageInfo_KeywordPlanNegativeKeyword.Size(m)
}
func (m *KeywordPlanNegativeKeyword) XXX_DiscardUnknown() {
	xxx_messageInfo_KeywordPlanNegativeKeyword.DiscardUnknown(m)
}

var xxx_messageInfo_KeywordPlanNegativeKeyword proto.InternalMessageInfo

func (m *KeywordPlanNegativeKeyword) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *KeywordPlanNegativeKeyword) GetKeywordPlanCampaign() *wrappers.StringValue {
	if m != nil {
		return m.KeywordPlanCampaign
	}
	return nil
}

func (m *KeywordPlanNegativeKeyword) GetId() *wrappers.Int64Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *KeywordPlanNegativeKeyword) GetText() *wrappers.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *KeywordPlanNegativeKeyword) GetMatchType() enums.KeywordMatchTypeEnum_KeywordMatchType {
	if m != nil {
		return m.MatchType
	}
	return enums.KeywordMatchTypeEnum_UNSPECIFIED
}

func init() {
	proto.RegisterType((*KeywordPlanNegativeKeyword)(nil), "google.ads.googleads.v2.resources.KeywordPlanNegativeKeyword")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v2/resources/keyword_plan_negative_keyword.proto", fileDescriptor_27b20929787d8602)
}

var fileDescriptor_27b20929787d8602 = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xdd, 0x6a, 0x14, 0x31,
	0x18, 0x65, 0xa6, 0x55, 0x68, 0xfc, 0xb9, 0x18, 0x11, 0x86, 0xb5, 0xe8, 0x56, 0x29, 0x2c, 0x08,
	0x19, 0x19, 0xa5, 0x17, 0xf1, 0x6a, 0xaa, 0xa5, 0xa8, 0x58, 0x96, 0x55, 0xf6, 0x42, 0x16, 0x86,
	0x74, 0x12, 0x63, 0xe8, 0xe4, 0x87, 0x24, 0xb3, 0x75, 0xdf, 0xc1, 0xa7, 0xf0, 0xd2, 0x47, 0xf1,
	0x05, 0x7c, 0x07, 0x9f, 0x42, 0x76, 0x92, 0xcc, 0x22, 0x65, 0xb5, 0x77, 0x27, 0xdf, 0x77, 0xce,
	0xf9, 0xfe, 0x02, 0x4e, 0x98, 0x52, 0xac, 0xa5, 0x05, 0x26, 0xb6, 0xf0, 0x70, 0x8d, 0x96, 0x65,
	0x61, 0xa8, 0x55, 0x9d, 0x69, 0xa8, 0x2d, 0x2e, 0xe8, 0xea, 0x52, 0x19, 0x52, 0xeb, 0x16, 0xcb,
	0x5a, 0x52, 0x86, 0x1d, 0x5f, 0xd2, 0x3a, 0x44, 0xa1, 0x36, 0xca, 0xa9, 0xec, 0xc0, 0x6b, 0x21,
	0x26, 0x16, 0x0e, 0x36, 0x70, 0x59, 0xc2, 0xc1, 0x66, 0x74, 0xb4, 0xad, 0x12, 0x95, 0x9d, 0xd8,
	0x54, 0x11, 0xd8, 0x35, 0x5f, 0x6a, 0xb7, 0xd2, 0xd4, 0x5b, 0x8f, 0x1e, 0x06, 0x5d, 0xff, 0x3a,
	0xef, 0x3e, 0x17, 0x97, 0x06, 0x6b, 0x4d, 0x8d, 0x0d, 0xf9, 0xfd, 0xe8, 0xab, 0x79, 0x81, 0xa5,
	0x54, 0x0e, 0x3b, 0xae, 0x64, 0xc8, 0x3e, 0xfe, 0x95, 0x82, 0xd1, 0x3b, 0x6f, 0x3d, 0x6d, 0xb1,
	0x3c, 0x0b, 0xed, 0x87, 0x50, 0xf6, 0x04, 0xdc, 0x89, 0x1d, 0xd6, 0x12, 0x0b, 0x9a, 0x27, 0xe3,
	0x64, 0xb2, 0x37, 0xbb, 0x1d, 0x83, 0x67, 0x58, 0xd0, 0x6c, 0x0a, 0xee, 0xff, 0xb5, 0x83, 0x06,
	0x0b, 0x8d, 0x39, 0x93, 0x79, 0x3a, 0x4e, 0x26, 0xb7, 0xca, 0xfd, 0x30, 0x31, 0x8c, 0x1d, 0xc2,
	0x0f, 0xce, 0x70, 0xc9, 0xe6, 0xb8, 0xed, 0xe8, 0xec, 0xde, 0xc5, 0xa6, 0xfa, 0xab, 0x20, 0xcc,
	0x9e, 0x82, 0x94, 0x93, 0x7c, 0xa7, 0x97, 0x3f, 0xb8, 0x22, 0x7f, 0x23, 0xdd, 0xd1, 0x0b, 0xaf,
	0x4e, 0x39, 0xc9, 0x9e, 0x81, 0x5d, 0x47, 0xbf, 0xba, 0x7c, 0xf7, 0x1a, 0xd5, 0x7a, 0x66, 0xd6,
	0x00, 0xb0, 0x59, 0x63, 0x7e, 0x63, 0x9c, 0x4c, 0xee, 0x96, 0xaf, 0xe1, 0xb6, 0x13, 0xf5, 0xfb,
	0x87, 0x61, 0x23, 0xef, 0xd7, 0xba, 0x8f, 0x2b, 0x4d, 0x4f, 0x64, 0x27, 0xae, 0x04, 0x67, 0x7b,
	0x22, 0xc2, 0xe3, 0x6f, 0x29, 0x38, 0x6c, 0x94, 0x80, 0xff, 0xbd, 0xfc, 0xf1, 0xa3, 0xed, 0x07,
	0x98, 0xae, 0x87, 0x98, 0x26, 0x9f, 0xde, 0x06, 0x17, 0xa6, 0x5a, 0x2c, 0x19, 0x54, 0x86, 0x15,
	0x8c, 0xca, 0x7e, 0xc4, 0xf8, 0x59, 0x34, 0xb7, 0xff, 0xf8, 0xa5, 0x2f, 0x07, 0xf4, 0x3d, 0xdd,
	0x39, 0xad, 0xaa, 0x1f, 0xe9, 0xc1, 0xa9, 0xb7, 0xac, 0x88, 0x85, 0x1e, 0xae, 0xd1, 0xbc, 0x84,
	0xb3, 0xc8, 0xfc, 0x19, 0x39, 0x8b, 0x8a, 0xd8, 0xc5, 0xc0, 0x59, 0xcc, 0xcb, 0xc5, 0xc0, 0xf9,
	0x9d, 0x1e, 0xfa, 0x04, 0x42, 0x15, 0xb1, 0x08, 0x0d, 0x2c, 0x84, 0xe6, 0x25, 0x42, 0x03, 0xef,
	0xfc, 0x66, 0xdf, 0xec, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x19, 0x71, 0xac, 0xf3, 0x51,
	0x03, 0x00, 0x00,
}
