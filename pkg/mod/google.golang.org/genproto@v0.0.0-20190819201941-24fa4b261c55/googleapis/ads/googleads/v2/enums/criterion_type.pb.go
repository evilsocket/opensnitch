// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v2/enums/criterion_type.proto

package enums

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible criterion types.
type CriterionTypeEnum_CriterionType int32

const (
	// Not specified.
	CriterionTypeEnum_UNSPECIFIED CriterionTypeEnum_CriterionType = 0
	// Used for return value only. Represents value unknown in this version.
	CriterionTypeEnum_UNKNOWN CriterionTypeEnum_CriterionType = 1
	// Keyword. e.g. 'mars cruise'.
	CriterionTypeEnum_KEYWORD CriterionTypeEnum_CriterionType = 2
	// Placement, aka Website. e.g. 'www.flowers4sale.com'
	CriterionTypeEnum_PLACEMENT CriterionTypeEnum_CriterionType = 3
	// Mobile application categories to target.
	CriterionTypeEnum_MOBILE_APP_CATEGORY CriterionTypeEnum_CriterionType = 4
	// Mobile applications to target.
	CriterionTypeEnum_MOBILE_APPLICATION CriterionTypeEnum_CriterionType = 5
	// Devices to target.
	CriterionTypeEnum_DEVICE CriterionTypeEnum_CriterionType = 6
	// Locations to target.
	CriterionTypeEnum_LOCATION CriterionTypeEnum_CriterionType = 7
	// Listing groups to target.
	CriterionTypeEnum_LISTING_GROUP CriterionTypeEnum_CriterionType = 8
	// Ad Schedule.
	CriterionTypeEnum_AD_SCHEDULE CriterionTypeEnum_CriterionType = 9
	// Age range.
	CriterionTypeEnum_AGE_RANGE CriterionTypeEnum_CriterionType = 10
	// Gender.
	CriterionTypeEnum_GENDER CriterionTypeEnum_CriterionType = 11
	// Income Range.
	CriterionTypeEnum_INCOME_RANGE CriterionTypeEnum_CriterionType = 12
	// Parental status.
	CriterionTypeEnum_PARENTAL_STATUS CriterionTypeEnum_CriterionType = 13
	// YouTube Video.
	CriterionTypeEnum_YOUTUBE_VIDEO CriterionTypeEnum_CriterionType = 14
	// YouTube Channel.
	CriterionTypeEnum_YOUTUBE_CHANNEL CriterionTypeEnum_CriterionType = 15
	// User list.
	CriterionTypeEnum_USER_LIST CriterionTypeEnum_CriterionType = 16
	// Proximity.
	CriterionTypeEnum_PROXIMITY CriterionTypeEnum_CriterionType = 17
	// A topic target on the display network (e.g. "Pets & Animals").
	CriterionTypeEnum_TOPIC CriterionTypeEnum_CriterionType = 18
	// Listing scope to target.
	CriterionTypeEnum_LISTING_SCOPE CriterionTypeEnum_CriterionType = 19
	// Language.
	CriterionTypeEnum_LANGUAGE CriterionTypeEnum_CriterionType = 20
	// IpBlock.
	CriterionTypeEnum_IP_BLOCK CriterionTypeEnum_CriterionType = 21
	// Content Label for category exclusion.
	CriterionTypeEnum_CONTENT_LABEL CriterionTypeEnum_CriterionType = 22
	// Carrier.
	CriterionTypeEnum_CARRIER CriterionTypeEnum_CriterionType = 23
	// A category the user is interested in.
	CriterionTypeEnum_USER_INTEREST CriterionTypeEnum_CriterionType = 24
	// Webpage criterion for dynamic search ads.
	CriterionTypeEnum_WEBPAGE CriterionTypeEnum_CriterionType = 25
	// Operating system version.
	CriterionTypeEnum_OPERATING_SYSTEM_VERSION CriterionTypeEnum_CriterionType = 26
	// App payment model.
	CriterionTypeEnum_APP_PAYMENT_MODEL CriterionTypeEnum_CriterionType = 27
	// Mobile device.
	CriterionTypeEnum_MOBILE_DEVICE CriterionTypeEnum_CriterionType = 28
	// Custom affinity.
	CriterionTypeEnum_CUSTOM_AFFINITY CriterionTypeEnum_CriterionType = 29
	// Custom intent.
	CriterionTypeEnum_CUSTOM_INTENT CriterionTypeEnum_CriterionType = 30
	// Location group.
	CriterionTypeEnum_LOCATION_GROUP CriterionTypeEnum_CriterionType = 31
)

var CriterionTypeEnum_CriterionType_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	2:  "KEYWORD",
	3:  "PLACEMENT",
	4:  "MOBILE_APP_CATEGORY",
	5:  "MOBILE_APPLICATION",
	6:  "DEVICE",
	7:  "LOCATION",
	8:  "LISTING_GROUP",
	9:  "AD_SCHEDULE",
	10: "AGE_RANGE",
	11: "GENDER",
	12: "INCOME_RANGE",
	13: "PARENTAL_STATUS",
	14: "YOUTUBE_VIDEO",
	15: "YOUTUBE_CHANNEL",
	16: "USER_LIST",
	17: "PROXIMITY",
	18: "TOPIC",
	19: "LISTING_SCOPE",
	20: "LANGUAGE",
	21: "IP_BLOCK",
	22: "CONTENT_LABEL",
	23: "CARRIER",
	24: "USER_INTEREST",
	25: "WEBPAGE",
	26: "OPERATING_SYSTEM_VERSION",
	27: "APP_PAYMENT_MODEL",
	28: "MOBILE_DEVICE",
	29: "CUSTOM_AFFINITY",
	30: "CUSTOM_INTENT",
	31: "LOCATION_GROUP",
}

var CriterionTypeEnum_CriterionType_value = map[string]int32{
	"UNSPECIFIED":              0,
	"UNKNOWN":                  1,
	"KEYWORD":                  2,
	"PLACEMENT":                3,
	"MOBILE_APP_CATEGORY":      4,
	"MOBILE_APPLICATION":       5,
	"DEVICE":                   6,
	"LOCATION":                 7,
	"LISTING_GROUP":            8,
	"AD_SCHEDULE":              9,
	"AGE_RANGE":                10,
	"GENDER":                   11,
	"INCOME_RANGE":             12,
	"PARENTAL_STATUS":          13,
	"YOUTUBE_VIDEO":            14,
	"YOUTUBE_CHANNEL":          15,
	"USER_LIST":                16,
	"PROXIMITY":                17,
	"TOPIC":                    18,
	"LISTING_SCOPE":            19,
	"LANGUAGE":                 20,
	"IP_BLOCK":                 21,
	"CONTENT_LABEL":            22,
	"CARRIER":                  23,
	"USER_INTEREST":            24,
	"WEBPAGE":                  25,
	"OPERATING_SYSTEM_VERSION": 26,
	"APP_PAYMENT_MODEL":        27,
	"MOBILE_DEVICE":            28,
	"CUSTOM_AFFINITY":          29,
	"CUSTOM_INTENT":            30,
	"LOCATION_GROUP":           31,
}

func (x CriterionTypeEnum_CriterionType) String() string {
	return proto.EnumName(CriterionTypeEnum_CriterionType_name, int32(x))
}

func (CriterionTypeEnum_CriterionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c011525940ee5e4a, []int{0, 0}
}

// The possible types of a criterion.
type CriterionTypeEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CriterionTypeEnum) Reset()         { *m = CriterionTypeEnum{} }
func (m *CriterionTypeEnum) String() string { return proto.CompactTextString(m) }
func (*CriterionTypeEnum) ProtoMessage()    {}
func (*CriterionTypeEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_c011525940ee5e4a, []int{0}
}

func (m *CriterionTypeEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CriterionTypeEnum.Unmarshal(m, b)
}
func (m *CriterionTypeEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CriterionTypeEnum.Marshal(b, m, deterministic)
}
func (m *CriterionTypeEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CriterionTypeEnum.Merge(m, src)
}
func (m *CriterionTypeEnum) XXX_Size() int {
	return xxx_messageInfo_CriterionTypeEnum.Size(m)
}
func (m *CriterionTypeEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_CriterionTypeEnum.DiscardUnknown(m)
}

var xxx_messageInfo_CriterionTypeEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v2.enums.CriterionTypeEnum_CriterionType", CriterionTypeEnum_CriterionType_name, CriterionTypeEnum_CriterionType_value)
	proto.RegisterType((*CriterionTypeEnum)(nil), "google.ads.googleads.v2.enums.CriterionTypeEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v2/enums/criterion_type.proto", fileDescriptor_c011525940ee5e4a)
}

var fileDescriptor_c011525940ee5e4a = []byte{
	// 623 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x4d, 0x6e, 0xdb, 0x3a,
	0x10, 0x7e, 0x71, 0xfe, 0x99, 0x38, 0xa1, 0x99, 0x97, 0x9f, 0x97, 0x97, 0xbc, 0x87, 0xe4, 0x00,
	0x32, 0xe0, 0xee, 0xd4, 0x15, 0x45, 0x4d, 0x14, 0x22, 0x32, 0x49, 0x50, 0x94, 0x53, 0x17, 0x06,
	0x08, 0x37, 0x36, 0x0c, 0x03, 0x89, 0x64, 0x58, 0x4e, 0x80, 0x5c, 0xa7, 0xcb, 0x1e, 0xa2, 0x07,
	0xe8, 0xba, 0x77, 0x28, 0xd0, 0x53, 0x14, 0x94, 0xac, 0xb4, 0x59, 0xb4, 0x1b, 0x61, 0x34, 0xdf,
	0xcc, 0x37, 0xdf, 0xfc, 0x10, 0x75, 0x26, 0x79, 0x3e, 0xb9, 0x1f, 0xb7, 0x87, 0xa3, 0xa2, 0x5d,
	0x99, 0xce, 0x7a, 0xea, 0xb4, 0xc7, 0xd9, 0xe3, 0x43, 0xd1, 0xbe, 0x9b, 0x4f, 0x17, 0xe3, 0xf9,
	0x34, 0xcf, 0xec, 0xe2, 0x79, 0x36, 0xf6, 0x66, 0xf3, 0x7c, 0x91, 0x93, 0xf3, 0x2a, 0xd0, 0x1b,
	0x8e, 0x0a, 0xef, 0x25, 0xc7, 0x7b, 0xea, 0x78, 0x65, 0xce, 0xe9, 0x59, 0x4d, 0x39, 0x9b, 0xb6,
	0x87, 0x59, 0x96, 0x2f, 0x86, 0x8b, 0x69, 0x9e, 0x15, 0x55, 0xf2, 0xe5, 0xd7, 0x35, 0xd4, 0x62,
	0x35, 0xab, 0x79, 0x9e, 0x8d, 0x21, 0x7b, 0x7c, 0xb8, 0xfc, 0xbc, 0x86, 0x9a, 0xaf, 0xbc, 0x64,
	0x1f, 0xed, 0xa4, 0x22, 0x51, 0xc0, 0xf8, 0x15, 0x87, 0x10, 0xff, 0x45, 0x76, 0xd0, 0x66, 0x2a,
	0x6e, 0x84, 0xbc, 0x15, 0x78, 0xc5, 0xfd, 0xdc, 0x40, 0xff, 0x56, 0xea, 0x10, 0x37, 0x48, 0x13,
	0x6d, 0xab, 0x98, 0x32, 0xe8, 0x82, 0x30, 0x78, 0x95, 0x1c, 0xa3, 0x83, 0xae, 0x0c, 0x78, 0x0c,
	0x96, 0x2a, 0x65, 0x19, 0x35, 0x10, 0x49, 0xdd, 0xc7, 0x6b, 0xe4, 0x08, 0x91, 0x9f, 0x40, 0xcc,
	0x19, 0x35, 0x5c, 0x0a, 0xbc, 0x4e, 0x10, 0xda, 0x08, 0xa1, 0xc7, 0x19, 0xe0, 0x0d, 0xb2, 0x8b,
	0xb6, 0x62, 0xb9, 0x44, 0x36, 0x49, 0x0b, 0x35, 0x63, 0x9e, 0x18, 0x2e, 0x22, 0x1b, 0x69, 0x99,
	0x2a, 0xbc, 0xe5, 0x74, 0xd1, 0xd0, 0x26, 0xec, 0x1a, 0xc2, 0x34, 0x06, 0xbc, 0xed, 0xaa, 0xd3,
	0x08, 0xac, 0xa6, 0x22, 0x02, 0x8c, 0x1c, 0x59, 0x04, 0x22, 0x04, 0x8d, 0x77, 0x08, 0x46, 0xbb,
	0x5c, 0x30, 0xd9, 0xad, 0xd1, 0x5d, 0x72, 0x80, 0xf6, 0x15, 0xd5, 0x20, 0x0c, 0x8d, 0x6d, 0x62,
	0xa8, 0x49, 0x13, 0xdc, 0x74, 0x55, 0xfa, 0x32, 0x35, 0x69, 0x00, 0xb6, 0xc7, 0x43, 0x90, 0x78,
	0xcf, 0xc5, 0xd5, 0x2e, 0x76, 0x4d, 0x85, 0x80, 0x18, 0xef, 0xbb, 0x4a, 0x69, 0x02, 0xda, 0x3a,
	0x49, 0x18, 0x97, 0x6d, 0x6b, 0xf9, 0x8e, 0x77, 0xb9, 0xe9, 0xe3, 0x16, 0xd9, 0x46, 0xeb, 0x46,
	0x2a, 0xce, 0x30, 0xf9, 0x55, 0x76, 0xc2, 0xa4, 0x02, 0x7c, 0x50, 0xf6, 0x45, 0x45, 0x94, 0xd2,
	0x08, 0xf0, 0xdf, 0xee, 0x8f, 0x2b, 0x1b, 0xc4, 0x92, 0xdd, 0xe0, 0x43, 0x17, 0xce, 0xa4, 0x30,
	0x20, 0x8c, 0x8d, 0x69, 0x00, 0x31, 0x3e, 0x72, 0xf3, 0x65, 0x54, 0x6b, 0x0e, 0x1a, 0x1f, 0x3b,
	0xbc, 0xac, 0xcb, 0x85, 0x01, 0x0d, 0x89, 0xc1, 0x27, 0x0e, 0xbf, 0x85, 0x40, 0x39, 0xb6, 0x7f,
	0xc8, 0x19, 0x3a, 0x91, 0x0a, 0x34, 0xad, 0x0a, 0xf6, 0x13, 0x03, 0x5d, 0xdb, 0x03, 0x9d, 0xb8,
	0x19, 0x9e, 0x92, 0x43, 0xd4, 0x72, 0x7b, 0x50, 0xb4, 0xef, 0xf6, 0x63, 0xbb, 0x32, 0x84, 0x18,
	0xff, 0xeb, 0x48, 0x97, 0xcb, 0x58, 0xce, 0xfe, 0xcc, 0x35, 0xcd, 0xd2, 0xc4, 0xc8, 0xae, 0xa5,
	0x57, 0x57, 0x5c, 0xb8, 0xb6, 0xce, 0x4b, 0x71, 0x95, 0x93, 0x97, 0x12, 0xf1, 0x7f, 0x84, 0xa0,
	0xbd, 0x7a, 0x47, 0xcb, 0xb5, 0xfc, 0x1f, 0x7c, 0x5b, 0x41, 0x17, 0x77, 0xf9, 0x83, 0xf7, 0xc7,
	0xd3, 0x0c, 0xc8, 0xab, 0x1b, 0x53, 0xee, 0x20, 0xd5, 0xca, 0xfb, 0x60, 0x99, 0x34, 0xc9, 0xef,
	0x87, 0xd9, 0xc4, 0xcb, 0xe7, 0x93, 0xf6, 0x64, 0x9c, 0x95, 0xe7, 0x5a, 0xbf, 0x89, 0xd9, 0xb4,
	0xf8, 0xcd, 0x13, 0x79, 0x5b, 0x7e, 0x3f, 0x36, 0x56, 0x23, 0x4a, 0x3f, 0x35, 0xce, 0xa3, 0x8a,
	0x8a, 0x8e, 0x0a, 0xaf, 0x32, 0x9d, 0xd5, 0xeb, 0x78, 0xee, 0xca, 0x8b, 0x2f, 0x35, 0x3e, 0xa0,
	0xa3, 0x62, 0xf0, 0x82, 0x0f, 0x7a, 0x9d, 0x41, 0x89, 0x7f, 0x6f, 0x5c, 0x54, 0x4e, 0xdf, 0xa7,
	0xa3, 0xc2, 0xf7, 0x5f, 0x22, 0x7c, 0xbf, 0xd7, 0xf1, 0xfd, 0x32, 0xe6, 0xc3, 0x46, 0x29, 0xec,
	0xcd, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x0d, 0x4c, 0x3b, 0xba, 0x03, 0x00, 0x00,
}
