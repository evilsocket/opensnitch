// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/automl/v1beta1/geometry.proto

package automl

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A vertex represents a 2D point in the image.
// The normalized vertex coordinates are between 0 to 1 fractions relative to
// the original plane (image, video). E.g. if the plane (e.g. whole image) would
// have size 10 x 20 then a point with normalized coordinates (0.1, 0.3) would
// be at the position (1, 6) on that plane.
type NormalizedVertex struct {
	// Required. Horizontal coordinate.
	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	// Required. Vertical coordinate.
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NormalizedVertex) Reset()         { *m = NormalizedVertex{} }
func (m *NormalizedVertex) String() string { return proto.CompactTextString(m) }
func (*NormalizedVertex) ProtoMessage()    {}
func (*NormalizedVertex) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbaead6fc80bf3a2, []int{0}
}

func (m *NormalizedVertex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NormalizedVertex.Unmarshal(m, b)
}
func (m *NormalizedVertex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NormalizedVertex.Marshal(b, m, deterministic)
}
func (m *NormalizedVertex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NormalizedVertex.Merge(m, src)
}
func (m *NormalizedVertex) XXX_Size() int {
	return xxx_messageInfo_NormalizedVertex.Size(m)
}
func (m *NormalizedVertex) XXX_DiscardUnknown() {
	xxx_messageInfo_NormalizedVertex.DiscardUnknown(m)
}

var xxx_messageInfo_NormalizedVertex proto.InternalMessageInfo

func (m *NormalizedVertex) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *NormalizedVertex) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// A bounding polygon of a detected object on a plane.
// On output both vertices and normalized_vertices are provided.
// The polygon is formed by connecting vertices in the order they are listed.
type BoundingPoly struct {
	// Output only . The bounding polygon normalized vertices.
	NormalizedVertices   []*NormalizedVertex `protobuf:"bytes,2,rep,name=normalized_vertices,json=normalizedVertices,proto3" json:"normalized_vertices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BoundingPoly) Reset()         { *m = BoundingPoly{} }
func (m *BoundingPoly) String() string { return proto.CompactTextString(m) }
func (*BoundingPoly) ProtoMessage()    {}
func (*BoundingPoly) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbaead6fc80bf3a2, []int{1}
}

func (m *BoundingPoly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoundingPoly.Unmarshal(m, b)
}
func (m *BoundingPoly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoundingPoly.Marshal(b, m, deterministic)
}
func (m *BoundingPoly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoundingPoly.Merge(m, src)
}
func (m *BoundingPoly) XXX_Size() int {
	return xxx_messageInfo_BoundingPoly.Size(m)
}
func (m *BoundingPoly) XXX_DiscardUnknown() {
	xxx_messageInfo_BoundingPoly.DiscardUnknown(m)
}

var xxx_messageInfo_BoundingPoly proto.InternalMessageInfo

func (m *BoundingPoly) GetNormalizedVertices() []*NormalizedVertex {
	if m != nil {
		return m.NormalizedVertices
	}
	return nil
}

func init() {
	proto.RegisterType((*NormalizedVertex)(nil), "google.cloud.automl.v1beta1.NormalizedVertex")
	proto.RegisterType((*BoundingPoly)(nil), "google.cloud.automl.v1beta1.BoundingPoly")
}

func init() {
	proto.RegisterFile("google/cloud/automl/v1beta1/geometry.proto", fileDescriptor_cbaead6fc80bf3a2)
}

var fileDescriptor_cbaead6fc80bf3a2 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4a, 0xc3, 0x30,
	0x18, 0xc7, 0x49, 0x05, 0x0f, 0x71, 0x07, 0xa9, 0x97, 0xe2, 0x44, 0xc7, 0x4e, 0x43, 0x30, 0x61,
	0x7a, 0x8b, 0xa7, 0xcd, 0x83, 0x17, 0x95, 0xb1, 0xc3, 0x0e, 0x52, 0x94, 0xac, 0x0d, 0x21, 0x90,
	0x7e, 0x5f, 0x49, 0xd3, 0xb1, 0xfa, 0x3e, 0xbe, 0x8c, 0x8f, 0xe2, 0x53, 0xc8, 0x92, 0x22, 0x28,
	0x63, 0xc7, 0x7f, 0x7e, 0xbf, 0xef, 0xff, 0x25, 0xa1, 0xd7, 0x1a, 0x51, 0x5b, 0xc5, 0x0b, 0x8b,
	0x6d, 0xc9, 0x65, 0xeb, 0xb1, 0xb2, 0x7c, 0x33, 0x5d, 0x2b, 0x2f, 0xa7, 0x5c, 0x2b, 0xac, 0x94,
	0x77, 0x1d, 0xab, 0x1d, 0x7a, 0x4c, 0x87, 0xd1, 0x65, 0xc1, 0x65, 0xd1, 0x65, 0xbd, 0x7b, 0x7e,
	0xd1, 0x17, 0xc9, 0xda, 0x70, 0x09, 0x80, 0x5e, 0x7a, 0x83, 0xd0, 0xc4, 0xd1, 0x31, 0xa3, 0xa7,
	0x2f, 0xe8, 0x2a, 0x69, 0xcd, 0x87, 0x2a, 0x57, 0xca, 0x79, 0xb5, 0x4d, 0x07, 0x94, 0x6c, 0x33,
	0x32, 0x22, 0x93, 0x64, 0x49, 0x42, 0xea, 0xb2, 0x24, 0xa6, 0x6e, 0x0c, 0x74, 0x30, 0xc7, 0x16,
	0x4a, 0x03, 0x7a, 0x81, 0xb6, 0x4b, 0xdf, 0xe8, 0x19, 0xfc, 0xce, 0xbf, 0x6f, 0x94, 0xf3, 0xa6,
	0x50, 0x4d, 0x96, 0x8c, 0x8e, 0x26, 0x27, 0xb7, 0x37, 0xec, 0xc0, 0xc5, 0xd8, 0xff, 0xbd, 0xcb,
	0x14, 0xfe, 0x9c, 0xec, 0x8a, 0xe6, 0x9f, 0x84, 0x5e, 0x15, 0x58, 0x1d, 0x2a, 0x5a, 0x90, 0xd7,
	0x59, 0x8f, 0x35, 0x5a, 0x09, 0x9a, 0xa1, 0xd3, 0x5c, 0x2b, 0x08, 0x2f, 0xe4, 0x11, 0xc9, 0xda,
	0x34, 0x7b, 0xff, 0xf2, 0x3e, 0xc6, 0xaf, 0x64, 0xf8, 0x18, 0xc4, 0xfc, 0x61, 0x27, 0xe5, 0xb3,
	0xd6, 0xe3, 0xb3, 0xcd, 0x57, 0x51, 0xfa, 0x4e, 0x2e, 0x23, 0x15, 0x22, 0x60, 0x21, 0x02, 0x7f,
	0x12, 0xa2, 0x17, 0xd6, 0xc7, 0x61, 0xd9, 0xdd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x53, 0x5d,
	0x3f, 0xba, 0xb7, 0x01, 0x00, 0x00,
}
